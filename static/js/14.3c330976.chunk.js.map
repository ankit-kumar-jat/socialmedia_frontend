{"version":3,"sources":["pages/Login.js"],"names":["useStyles","makeStyles","theme","margin","marginTop","spacing","relative","position","progressbar","top","left","marginLeft","Login","classes","React","useState","email","password","showPassword","values","setValues","errors","setErrors","submit","disableBtn","setDisableBtn","enqueueSnackbar","useSnackbar","authDispatch","useContext","AuthContext","handleChange","prop","event","target","value","validateEmail","validatePassword","handleLogin","e","a","preventDefault","data","fetch","SERVER","method","headers","credentials","body","JSON","stringify","then","response","json","success","variant","type","payload","message","catch","error","console","Fragment","maxWidth","disableGutters","mt","onSubmit","color","fullWidth","className","htmlFor","id","onChange","startAdornment","endAdornment","aria-label","onClick","onMouseDown","component","RouterLink","to","clsx","disabled","size","align"],"mappings":"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","file":"static/js/14.3c330976.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport {\r\n    CircularProgress,\r\n    Box,\r\n    Container,\r\n    Input,\r\n    Typography,\r\n    FormControl,\r\n    InputLabel,\r\n    InputAdornment,\r\n    IconButton,\r\n    Button,\r\n    Link\r\n} from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\r\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport AuthContext from \"../utils/AuthContext\";\r\nimport clsx from 'clsx';\r\nimport { validateEmail, validatePassword } from '../utils/validator'\r\nimport { useSnackbar } from 'notistack';\r\nimport { SERVER } from '../config';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    margin: {\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    relative: {\r\n        position: 'relative',\r\n    },\r\n    progressbar: {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        marginTop: -12,\r\n        marginLeft: -12,\r\n    }\r\n}));\r\n\r\n\r\nfunction Login() {\r\n    const classes = useStyles();\r\n    const [values, setValues] = React.useState({\r\n        email: '',\r\n        password: '',\r\n        showPassword: false,\r\n    });\r\n    const [errors, setErrors] = React.useState({\r\n        email: false,\r\n        password: false,\r\n    });\r\n    const [disableBtn, setDisableBtn] = React.useState({\r\n        submit: false,\r\n    })\r\n    const { enqueueSnackbar } = useSnackbar();\r\n\r\n\r\n    const { authDispatch } = React.useContext(AuthContext);\r\n\r\n    const handleChange = (prop) => (event) => {\r\n        setValues({ ...values, [prop]: event.target.value });\r\n        if (prop === \"email\") {\r\n            setErrors({\r\n                email: !validateEmail(event.target.value)\r\n            })\r\n        } else if (prop === \"password\") {\r\n            setErrors({\r\n                password: !validatePassword(event.target.value)\r\n            })\r\n        }\r\n    };\r\n\r\n    const handleClickShowPassword = () => {\r\n        setValues({ ...values, showPassword: !values.showPassword });\r\n    };\r\n\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    const handleLogin = async (e) => {\r\n        e.preventDefault();\r\n        if (!errors.email && !errors.password && values.password && values.email) {\r\n            setDisableBtn({\r\n                submit: true\r\n            });\r\n            const data = { email: values.email, password: values.password }\r\n            await fetch(`${SERVER}/auth/login`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                credentials: 'include',\r\n                body: JSON.stringify(data),\r\n            })\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    if (data.success) {\r\n                        enqueueSnackbar('Login successfully!', { variant: \"success\" });\r\n                        authDispatch({\r\n                            type: 'LOGIN',\r\n                            payload: data\r\n                        });\r\n                    } else {\r\n                        enqueueSnackbar(data.message, { variant: \"error\" });\r\n                        setDisableBtn({\r\n                            submit: false\r\n                        })\r\n                    }\r\n                })\r\n                .catch((error) => {\r\n                    enqueueSnackbar('Login failed!', { variant: \"error\" });\r\n                    setDisableBtn({\r\n                        submit: false\r\n                    })\r\n                    console.error('Error:', error);\r\n                });\r\n        } else {\r\n            enqueueSnackbar('Email and Password should be valid.', { variant: \"warning\" });\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Container maxWidth=\"xs\" disableGutters>\r\n                <Box mt={5}>\r\n                    <form onSubmit={handleLogin}>\r\n                        <Typography variant=\"h4\" color=\"initial\">Log In</Typography>\r\n                        <Typography variant=\"body1\" color=\"inherit\">with your LinkBook account</Typography>\r\n                        <Box mt={2}>\r\n                            <FormControl fullWidth className={classes.margin} error={errors.email}>\r\n                                <InputLabel htmlFor=\"userEmail\">Email</InputLabel>\r\n                                <Input\r\n                                    id=\"userEmail\"\r\n                                    type=\"email\"\r\n                                    value={values.email}\r\n                                    onChange={handleChange('email')}\r\n                                    startAdornment={\r\n                                        <InputAdornment position=\"start\" >\r\n                                            <MailIcon />\r\n                                        </InputAdornment>\r\n                                    }\r\n                                />\r\n                            </FormControl>\r\n                            <FormControl fullWidth className={classes.margin} error={errors.password}>\r\n                                <InputLabel htmlFor=\"userPassword\">Password</InputLabel>\r\n                                <Input\r\n                                    id=\"userPassword\"\r\n                                    type={values.showPassword ? 'text' : 'password'}\r\n                                    value={values.password}\r\n                                    onChange={handleChange('password')}\r\n                                    startAdornment={\r\n                                        <InputAdornment position=\"start\" >\r\n                                            <VpnKeyIcon />\r\n                                        </InputAdornment>\r\n                                    }\r\n                                    endAdornment={\r\n                                        <InputAdornment position=\"end\" >\r\n                                            <IconButton\r\n                                                aria-label=\"toggle password visibility\"\r\n                                                onClick={handleClickShowPassword}\r\n                                                onMouseDown={handleMouseDownPassword}\r\n                                            >\r\n                                                {values.showPassword ? <VisibilityIcon /> : <VisibilityOffIcon />}\r\n                                            </IconButton>\r\n                                        </InputAdornment>\r\n                                    }\r\n                                />\r\n                            </FormControl>\r\n                            <FormControl className={classes.margin}>\r\n                                <Link component={RouterLink} to=\"/forgetpass\" color=\"primary\">Forgot Your Password?</Link>\r\n                            </FormControl>\r\n                            <FormControl fullWidth className={clsx(classes.margin, classes.relative)} >\r\n                                <Button variant=\"contained\" color=\"primary\" disabled={disableBtn.submit} type='submit'>Log In</Button>\r\n                                {disableBtn.submit && <CircularProgress size={24} className={classes.progressbar}></CircularProgress>}\r\n                            </FormControl>\r\n                            <Typography variant=\"subtitle1\" color=\"initial\" className={classes.margin} align=\"center\">\r\n                                Not registered? <Link component={RouterLink} to=\"/register\" color=\"primary\">Create a account</Link>\r\n                            </Typography>\r\n                        </Box>\r\n                    </form>\r\n                </Box>\r\n            </Container>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Login\r\n"],"sourceRoot":""}