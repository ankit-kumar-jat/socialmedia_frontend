{"version":3,"sources":["config.js","components/ScrollToTop.js","utils/AuthContext.js","utils/UserContext.js","components/NewPost.js","utils/FormatDate.js","components/Notification.js","components/navigation.js","components/Comment.js","components/PostCard.js","components/GetPosts.js","pages/Home.js","pages/Login.js","pages/Register.js","components/NewAvatar.js","components/Follow.js","pages/User.js","utils/PrivateRoute.js","utils/PublicRoute.js","pages/NotFound.js","pages/ForgetPass.js","components/ChangePasswordForm.js","components/EditProfile.js","pages/Settings.js","pages/Feed.js","pages/Trending.js","pages/PostById.js","pages/Redirect.js","App.js","components/CheckAuthWrapper.js","serviceWorkerRegistration.js","index.js","utils/validator.js"],"names":["module","exports","SERVER","ScrollToTop","pathname","useLocation","useEffect","window","scrollTo","AuthContext","React","createContext","UserContext","useStyles","makeStyles","theme","modal","display","alignItems","justifyContent","cardRoot","width","maxWidth","overflow","margin","spacing","position","outline","media","minHeight","maxHeight","image","imageWrapper","closeBtn","right","top","progressbar","left","marginTop","marginLeft","btnWrapper","input","NewPost","history","useHistory","classes","authDispatch","useContext","useState","open","setOpen","submit","disableBtn","setDisableBtn","preview","postText","values","setValues","errors","setErrors","enqueueSnackbar","useSnackbar","handleClose","handleInputChange","prop","event","target","files","URL","createObjectURL","value","validatePostText","Fragment","Tooltip","title","IconButton","color","aria-label","onClick","Modal","aria-labelledby","aria-describedby","className","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","Card","onSubmit","e","preventDefault","formData","FormData","append","fetch","method","credentials","body","then","response","json","data","success","variant","type","push","post","_id","status","message","catch","error","console","CardActionArea","Container","disableGutters","src","alt","CardContent","TextField","fullWidth","id","label","multiline","rows","onChange","CardActions","style","flexGrow","accept","htmlFor","component","Button","disableElevation","disabled","CircularProgress","size","formateDate","date","nowDate","Date","now","rft","Intl","RelativeTimeFormat","undefined","numeric","SECOND","MINUTE","HOUR","DAY","WEEK","MONTH","YEAR","intervals","ge","divisor","unit","text","getTime","diff","diffAbs","Math","abs","interval","x","round","isFuture","format","Notification","anchorEl","setAnchorEl","notifications","setNotifications","handleMenuClose","renderNotifications","Menu","anchorOrigin","vertical","horizontal","transformOrigin","Boolean","length","map","notification","MenuItem","RouterLink","to","postId","createdAt","keepMounted","minWidth","currentTarget","res","root","drawer","breakpoints","up","flexShrink","appBar","zIndex","menuButton","marginRight","toolbar","mixins","drawerPaper","content","paddingTop","grow","mrLeft","textDecoration","justCenter","avatar","height","Navigation","props","useTheme","mobileOpen","setMobileOpen","authState","user","setUser","location","container","document","myTheme","setTheme","appliedTheme","createMuiTheme","palette","zhCN","icon","handleDrawerToggle","handleDrawerHide","isAuthenticated","username","refreshUser","handleLogout","ListItem","Divider","Hidden","smDown","implementation","List","userInfo","login","area-label","padding","Avatar","dense","Typography","disablePadding","flexDirection","posts","followers","following","name","index","item","button","selected","ListItemIcon","ListItemText","primary","renderMenu","ThemeProvider","CssBaseline","AppBar","Toolbar","edge","noWrap","aria-controls","aria-haspopup","Link","mdUp","Drawer","anchor","direction","paper","ModalProps","Provider","children","Comment","state","isLoading","this","comment","userId","setState","userID","Skeleton","animation","marginBottom","created_at","Component","card","borderRadius","cardContent","paddingBottom","commentForm","commentAvatar","noPadding","PostCard","hide","setHide","loading","setLoading","setPost","liked","setLiked","delete","expanded","setExpanded","t","toDateString","split","isMenuOpen","menuId","notSkeleton","owner","confirm","headers","JSON","stringify","handleDeletePost","handleLike","likes","CardHeader","action","subheader","postImage","CardMedia","single","like","comments","disableSpacing","Collapse","unmountOnExit","commentslist","unshift","commentId","GetPosts","loadMore","nextPage","nullPost","getPosts","page","url","next","concat","handleLoadMore","prevProps","refreshPost","Box","Home","relative","Login","email","password","showPassword","handleChange","validateEmail","validatePassword","handleLogin","a","payload","mt","FormControl","InputLabel","Input","startAdornment","InputAdornment","endAdornment","onMouseDown","clsx","align","Register","confirmPassword","showConfirmPassword","validateUsername","handleMouseDownPassword","handleRegister","FormHelperText","flexCenter","NewAvatar","startIcon","Follow","follow","setFollow","disable","setDisable","log","box","gutters","paddingLeft","avatarBox","flex","mainFlex","avatarWrapper","mrRight","User","useParams","setData","bottom","bio","href","website","orientation","flexItem","PrivateRoute","rest","render","PublicRoute","NotFound","ForgetPass","ChangePasswordForm","oldPassword","showOldPassword","form","EditProfile","maxLength","mrBottom","mrTop","Settings","setIndex","Tabs","indicatorColor","textColor","Tab","Feed","Tranding","PostById","setValue","Redirect","path","authReducer","App","initialState","useReducer","maxSnack","exact","Trending","exect","CheckAuthWrapper","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister","emailRegExp","RegExp","passRegExp","usernameRegExp","postTextRegExp","test"],"mappings":"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","file":"static/js/main.35104865.chunk.js","sourcesContent":["// const SERVER = 'http://127.0.0.1:5000';\r\nconst SERVER = 'http://api.ankitkumarjat.me';\r\n// const SERVER = 'http://192.168.42.150:5000';\r\n\r\nmodule.exports = {\r\n    SERVER\r\n}","import { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport default function ScrollToTop() {\r\n    const { pathname } = useLocation();\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n    }, [pathname]);\r\n\r\n    return null;\r\n}","import React from \"react\";\r\nconst AuthContext = React.createContext();\r\nexport default AuthContext;","import React from \"react\";\r\nconst UserContext = React.createContext();\r\nexport default UserContext;","import React from 'react'\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport {\r\n    Tooltip,\r\n    IconButton,\r\n    Modal,\r\n    Fade,\r\n    Backdrop,\r\n    Card,\r\n    CardActionArea,\r\n    // CardMedia,\r\n    CardContent,\r\n    CardActions,\r\n    Button,\r\n    CircularProgress,\r\n    TextField,\r\n    // Divider,\r\n    Container,\r\n} from '@material-ui/core';\r\nimport { useHistory } from 'react-router-dom'\r\nimport CameraAltIcon from '@material-ui/icons/CameraAlt';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { useSnackbar } from 'notistack'\r\nimport { validatePostText } from \"../utils/validator\";\r\nimport AuthContext from '../utils/AuthContext';\r\nimport { SERVER } from '../config'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    cardRoot: {\r\n        width: '100%',\r\n        maxWidth: 600,\r\n        overflow: 'auto',\r\n        margin: theme.spacing(2),\r\n        position: 'relative',\r\n        outline: 'none',\r\n    },\r\n    media: {\r\n        minHeight: 60,\r\n        maxHeight: 250,\r\n    },\r\n    image: {\r\n        maxHeight: 250,\r\n        maxWidth: '100%',\r\n    },\r\n    imageWrapper: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n    },\r\n    closeBtn: {\r\n        position: 'absolute',\r\n        right: theme.spacing(.5),\r\n        top: theme.spacing(.5),\r\n    },\r\n    progressbar: {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        marginTop: -12,\r\n        marginLeft: -12,\r\n    },\r\n    btnWrapper: {\r\n        position: 'relative',\r\n    },\r\n    input: {\r\n        display: 'none',\r\n    }\r\n}));\r\n\r\nvar image = null;\r\n\r\nexport default function NewPost() {\r\n    const history = useHistory();\r\n    const classes = useStyles();\r\n    const { authDispatch } = React.useContext(AuthContext);\r\n    const [open, setOpen] = React.useState(false);\r\n    const [disableBtn, setDisableBtn] = React.useState({\r\n        submit: false,\r\n    });\r\n    const [values, setValues] = React.useState({\r\n        preview: '',\r\n        postText: '',\r\n    });\r\n\r\n    const [errors, setErrors] = React.useState({\r\n        postText: false\r\n    })\r\n    const { enqueueSnackbar } = useSnackbar();\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleCreatePost = (e) => {\r\n        e.preventDefault();\r\n        setDisableBtn({ submit: true });\r\n        if (validatePostText(values.postText)) {\r\n            const formData = new FormData();\r\n            if (image)\r\n                formData.append('image', image);\r\n\r\n            formData.append('postText', values.postText);\r\n            fetch(`${SERVER}/posts/create`, {\r\n                method: 'POST',\r\n                credentials: 'include',\r\n                body: formData,\r\n            })\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    if (data.success) {\r\n                        enqueueSnackbar('Post Created!', { variant: \"success\" });\r\n                        setValues({ image: '', postText: '' });\r\n                        setOpen(false);\r\n                        authDispatch({\r\n                            type: 'REFPOST'\r\n                        })\r\n                        history.push(`/posts/${data.post._id}`);\r\n                    } else {\r\n                        if (data.status === 401)\r\n                            authDispatch({\r\n                                type: \"LOGOUT\"\r\n                            })\r\n                        enqueueSnackbar(data.message, { variant: \"error\" });\r\n                    }\r\n                    setDisableBtn({\r\n                        submit: false\r\n                    })\r\n                })\r\n                .catch((error) => {\r\n                    enqueueSnackbar('Post Creation Failed', { variant: 'error' });\r\n                    setDisableBtn({\r\n                        submit: false\r\n                    })\r\n                    console.error('Error:', error);\r\n                });\r\n        } else {\r\n            setDisableBtn({ submit: false });\r\n            enqueueSnackbar('Post text must be 10-255 characters long', { variant: 'warning' });\r\n        }\r\n    }\r\n\r\n    const handleInputChange = (prop) => (event) => {\r\n        if (prop === 'image') {\r\n            image = event.target.files[0];\r\n            setValues({ ...values, preview: URL.createObjectURL(event.target.files[0]) });\r\n        } else {\r\n            setValues({ ...values, [prop]: event.target.value });\r\n            setErrors({ postText: !validatePostText(event.target.value) })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Tooltip title=\"New Post\">\r\n                <IconButton color=\"inherit\" aria-label=\"add new post\" onClick={handleOpen} >\r\n                    <AddIcon />\r\n                </IconButton>\r\n            </Tooltip>\r\n            <Modal\r\n                aria-labelledby=\"transition-modal-title\"\r\n                aria-describedby=\"transition-modal-description\"\r\n                className={classes.modal}\r\n                open={open}\r\n                onClose={handleClose}\r\n                closeAfterTransition\r\n                BackdropComponent={Backdrop}\r\n                BackdropProps={{\r\n                    timeout: 500,\r\n                }}\r\n            >\r\n                <Fade in={open}>\r\n                    <Card className={classes.cardRoot}>\r\n                        <form onSubmit={handleCreatePost}>\r\n                            <CardActionArea className={classes.media}>\r\n                                <Container disableGutters className={classes.imageWrapper}>\r\n                                    {/*<CardMedia\r\n                                    className={classes.media}\r\n                                    image='${SERVER}/images/profile/profile-ankit.jpg'\r\n                                    title=\"Contemplative Reptile\"\r\n                                />*/}\r\n                                    <div></div>{/*this is because a container must hava a child */}\r\n                                    {values.preview && <img src={values.preview} alt=\"Post\" className={classes.image} />}\r\n                                </Container>\r\n                            </CardActionArea>\r\n                            <CardContent>\r\n                                <TextField\r\n                                    fullWidth\r\n                                    id=\"postText\"\r\n                                    label=\"Whats Happening?\"\r\n                                    multiline\r\n                                    rows={4}\r\n                                    value={values.postText}\r\n                                    onChange={handleInputChange('postText')}\r\n                                    error={errors.postText}\r\n                                />\r\n                            </CardContent>\r\n                            {/*<Divider />*/}\r\n                            <CardActions>\r\n                                <div style={{ flexGrow: 1 }}>\r\n                                    <input\r\n                                        accept=\"image/*\"\r\n                                        className={classes.input}\r\n                                        id=\"postImage\"\r\n                                        type=\"file\"\r\n                                        onChange={handleInputChange('image')} />\r\n                                    <label htmlFor=\"postImage\">\r\n                                        <Tooltip title=\"Add post image\" component=\"span\">\r\n                                            <IconButton aria-label=\"Add post image\" color='primary'>\r\n                                                <CameraAltIcon />\r\n                                            </IconButton>\r\n                                        </Tooltip>\r\n                                    </label>\r\n                                </div>\r\n                                <Button variant=\"contained\" disableElevation onClick={handleClose}>\r\n                                    Close\r\n                                </Button>\r\n                                <div className={classes.btnWrapper}>\r\n                                    <Button variant=\"contained\" color=\"primary\" type='submit' disableElevation disabled={disableBtn.submit}>\r\n                                        Create Post\r\n                                    </Button>\r\n                                    {disableBtn.submit && <CircularProgress size={24} className={classes.progressbar}></CircularProgress>}\r\n                                </div>\r\n                            </CardActions>\r\n                        </form>\r\n                        <CardActions className={classes.closeBtn}>\r\n                            <Tooltip title=\"Close\">\r\n                                <IconButton aria-label=\"Close Modal\" onClick={handleClose}>\r\n                                    <CloseIcon />\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                        </CardActions>\r\n                    </Card>\r\n                </Fade>\r\n            </Modal>\r\n        </React.Fragment>\r\n    );\r\n\r\n}\r\n\r\n","export default function formateDate(date, nowDate = Date.now(), rft = new Intl.RelativeTimeFormat(undefined, { numeric: \"auto\" })) {\r\n    const SECOND = 1000;\r\n    const MINUTE = 60 * SECOND;\r\n    const HOUR = 60 * MINUTE;\r\n    const DAY = 24 * HOUR;\r\n    const WEEK = 7 * DAY;\r\n    const MONTH = 30 * DAY;\r\n    const YEAR = 365 * DAY;\r\n    const intervals = [\r\n        { ge: YEAR, divisor: YEAR, unit: 'year' },\r\n        { ge: MONTH, divisor: MONTH, unit: 'month' },\r\n        { ge: WEEK, divisor: WEEK, unit: 'week' },\r\n        { ge: DAY, divisor: DAY, unit: 'day' },\r\n        { ge: HOUR, divisor: HOUR, unit: 'hour' },\r\n        { ge: MINUTE, divisor: MINUTE, unit: 'minute' },\r\n        { ge: 30 * SECOND, divisor: SECOND, unit: 'seconds' },\r\n        { ge: 0, divisor: 1, text: 'just now' },\r\n    ];\r\n    const now = typeof nowDate === 'object' ? nowDate.getTime() : new Date(nowDate).getTime();\r\n    const diff = now - (typeof date === 'object' ? date : new Date(date)).getTime();\r\n    const diffAbs = Math.abs(diff);\r\n    for (const interval of intervals) {\r\n        if (diffAbs >= interval.ge) {\r\n            const x = Math.round(Math.abs(diff) / interval.divisor);\r\n            const isFuture = diff < 0;\r\n            return interval.unit ? rft.format(isFuture ? x : -x, interval.unit) : interval.text;\r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport NotificationsNoneIcon from '@material-ui/icons/NotificationsNone';\r\nimport {\r\n\tTooltip,\r\n\tIconButton,\r\n\tMenu,\r\n\tMenuItem,\r\n\tCircularProgress\r\n} from '@material-ui/core';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport { useSnackbar } from 'notistack';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { SERVER } from '../config';\r\nimport formateDate from '../utils/FormatDate';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tprogressbar: {\r\n\t\tposition: 'absolute',\r\n\t\ttop: '50%',\r\n\t\tleft: '50%',\r\n\t\tmarginTop: -15,\r\n\t\tmarginLeft: -15,\r\n\t},\r\n}));\r\n\r\nfunction Notification() {\r\n\tconst classes = useStyles();\r\n\tconst [anchorEl, setAnchorEl] = React.useState(null);\r\n\tconst [notifications, setNotifications] = React.useState();\r\n\tconst { enqueueSnackbar } = useSnackbar();\r\n\r\n\tconst getNotifications = () => {\r\n\t\tfetch(`${SERVER}/users/notifications`, {\r\n\t\t\tmethod: 'GET',\r\n\t\t\tcredentials: 'include',\r\n\t\t})\r\n\t\t\t.then(response => response.json())\r\n\t\t\t.then(res => {\r\n\t\t\t\tif (res.success) {\r\n\t\t\t\t\tsetNotifications(res.notifications);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tenqueueSnackbar(res.message, { variant: \"error\" });\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((error) => {\r\n\t\t\t\tenqueueSnackbar('Failed to get notifications', { variant: \"error\" });\r\n\t\t\t\tconsole.error('Error:', error);\r\n\t\t\t});\r\n\t}\r\n\r\n\tconst handleMenuOpen = (event) => {\r\n\t\tsetAnchorEl(event.currentTarget);\r\n\t\tgetNotifications()\r\n\t};\r\n\tconst handleMenuClose = () => {\r\n\t\tsetAnchorEl(null);\r\n\t};\r\n\r\n\tconst renderNotifications = (\r\n\t\tnotifications ? <Menu\r\n\t\t\tanchorEl={anchorEl}\r\n\t\t\tanchorOrigin={{ vertical: \"top\", horizontal: 'left' }}\r\n\t\t\tid=\"account-menu\"\r\n\t\t\ttransformOrigin={{ vertical: 'bottom', horizontal: 'right' }}\r\n\t\t\topen={Boolean(anchorEl)}\r\n\t\t\tonClose={handleMenuClose}\r\n\t\t>\r\n\t\t\t{/*<MenuItem>Hi {authState.username}!</MenuItem>*/}\r\n\t\t\t{notifications.length > 0 ? notifications.map((notification) => {\r\n\t\t\t\treturn (<MenuItem\r\n\t\t\t\t\tonClick={handleMenuClose}\r\n\t\t\t\t\tcomponent={RouterLink}\r\n\t\t\t\t\tto={`/posts/${notification.postId}`}>\r\n\t\t\t\t\t{`${notification.message} ${formateDate(notification.createdAt)}`}\r\n\t\t\t\t</MenuItem>)\r\n\t\t\t})\r\n\t\t\t\t: <MenuItem onClick={handleMenuClose}>You have no notifications yet</MenuItem>\r\n\t\t\t}\r\n\t\t</Menu>\r\n\t\t\t: (\r\n\t\t\t\t<Menu\r\n\t\t\t\t\tanchorEl={anchorEl}\r\n\t\t\t\t\tanchorOrigin={{ vertical: \"top\", horizontal: 'left' }}\r\n\t\t\t\t\tid=\"account-menu\"\r\n\t\t\t\t\tkeepMounted\r\n\t\t\t\t\ttransformOrigin={{ vertical: 'bottom', horizontal: 'right' }}\r\n\t\t\t\t\topen={Boolean(anchorEl)}\r\n\t\t\t\t\tonClose={handleMenuClose}\r\n\t\t\t\t>\r\n\t\t\t\t\t<MenuItem>\r\n\t\t\t\t\t\t<div style={{ minWidth: 300, minHeight: 100 }}>\r\n\t\t\t\t\t\t\t<CircularProgress className={classes.progressbar} size={30} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</MenuItem>\r\n\t\t\t\t</Menu>\r\n\t\t\t)\r\n\t);\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Tooltip title=\"Notifications\">\r\n\t\t\t\t<IconButton aria-label=\"Notifications\" color=\"inherit\" onClick={handleMenuOpen}>\r\n\t\t\t\t\t<NotificationsNoneIcon />\r\n\t\t\t\t</IconButton>\r\n\t\t\t</Tooltip>\r\n\t\t\t{renderNotifications}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default Notification;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link as RouterLink, useLocation } from 'react-router-dom'\r\nimport {\r\n    AppBar,\r\n    CssBaseline,\r\n    Divider,\r\n    Drawer,\r\n    Hidden,\r\n    IconButton,\r\n    List,\r\n    ListItem,\r\n    ListItemIcon,\r\n    ListItemText,\r\n    Toolbar,\r\n    Typography,\r\n    Button,\r\n    ThemeProvider,\r\n    Container,\r\n    Menu,\r\n    MenuItem,\r\n    Avatar,\r\n    Tooltip,\r\n} from '@material-ui/core';\r\nimport { zhCN } from '@material-ui/core/locale';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport RssFeedIcon from '@material-ui/icons/RssFeed';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport WhatshotIcon from '@material-ui/icons/Whatshot';\r\n// import SearchIcon from '@material-ui/icons/Search';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\n// import CollectionsIcon from '@material-ui/icons/Collections';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport Brightness7Icon from '@material-ui/icons/Brightness7';\r\nimport Brightness4Icon from '@material-ui/icons/Brightness4';\r\nimport { makeStyles, useTheme, createMuiTheme } from '@material-ui/core/styles';\r\nimport { Link } from 'react-router-dom';\r\nimport AuthContext from \"../utils/AuthContext\";\r\nimport UserContext from '../utils/UserContext';\r\nimport { useSnackbar } from 'notistack';\r\nimport NewPost from './NewPost';\r\nimport Notification from './Notification';\r\nimport { SERVER } from '../config'\r\nconst drawerWidth = 300;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    drawer: {\r\n        [theme.breakpoints.up('md')]: {\r\n            width: drawerWidth,\r\n            flexShrink: 0,\r\n        },\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n        [theme.breakpoints.up('md')]: {\r\n            display: 'none',\r\n        },\r\n    },\r\n    // necessary for content to be below app bar\r\n    toolbar: theme.mixins.toolbar,\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        paddingTop: theme.spacing(3),\r\n    },\r\n    //added by me\r\n    grow: {\r\n        flexGrow: 1,\r\n    },\r\n    mrLeft: {\r\n        marginLeft: theme.spacing(1),\r\n    },\r\n    title: {\r\n        textDecoration: 'none',\r\n    },\r\n    justCenter: {\r\n        justifyContent: 'center',\r\n    },\r\n    avatar: {\r\n        width: theme.spacing(10),\r\n        height: theme.spacing(10),\r\n    }\r\n}));\r\n\r\nfunction Navigation(props) {\r\n    const { window } = props;\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [mobileOpen, setMobileOpen] = React.useState(false);\r\n    const { authState, authDispatch } = React.useContext(AuthContext);\r\n    const [user, setUser] = React.useState(null);\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    // const [locale, setLocale] = React.useState('zhCN')\r\n    const location = useLocation();\r\n\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    const container = window !== undefined ? () => window().document.body : undefined;\r\n\r\n    // theme\r\n    const light = {\r\n        palette: {\r\n            type: 'light',\r\n        },\r\n    }\r\n    const dark = {\r\n        palette: {\r\n            type: 'dark',\r\n        },\r\n    }\r\n    const [myTheme, setTheme] = React.useState(true);\r\n    const appliedTheme = createMuiTheme((myTheme ? light : dark), zhCN);\r\n\r\n    const icon = !myTheme ? <Brightness7Icon /> : <Brightness4Icon />\r\n\r\n    const handleThemeChange = () => {\r\n        setTheme(!myTheme);\r\n    }\r\n\r\n    const handleProfileMenuOpen = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    // profile menu close\r\n    const handleMenuClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const handleDrawerToggle = () => {\r\n        setMobileOpen(!mobileOpen);\r\n    };\r\n\r\n    const handleDrawerHide = () => {\r\n        if (mobileOpen) {\r\n            setMobileOpen(!mobileOpen);\r\n        }\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        if (authState.isAuthenticated) {\r\n            fetch(`${SERVER}/users/username/${authState.username}`, {\r\n                method: 'GET',\r\n                credentials: 'include'\r\n            })\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    if (data.success) {\r\n                        setUser(data)\r\n                    } else {\r\n                        if (data.status === 401)\r\n                            authDispatch({\r\n                                type: \"LOGOUT\"\r\n                            })\r\n                        setUser(null)\r\n                    }\r\n                })\r\n                .catch((error) => {\r\n                    setUser(null)\r\n                });\r\n        }\r\n    }, [authState, authState.refreshUser, authDispatch])\r\n\r\n    const handleLogout = () => {\r\n        fetch(`${SERVER}/auth/logout`, {\r\n            method: 'DELETE',\r\n            credentials: 'include'\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                if (data.success) {\r\n                    const variant = 'success';\r\n                    enqueueSnackbar('Logout successfully!', { variant });\r\n                    authDispatch({ type: 'LOGOUT' });\r\n                } else {\r\n                    const variant = 'error';\r\n                    enqueueSnackbar('Logout failed!', { variant });\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                const variant = 'error';\r\n                enqueueSnackbar('Logout failed!', { variant });\r\n            });\r\n    }\r\n\r\n    const drawer = (\r\n        <div>\r\n            <div className={classes.toolbar} >\r\n                <ListItem>\r\n                    <div className={classes.grow}></div>\r\n                    <IconButton aria-label=\"Close Drawer\" color=\"inherit\" onClick={handleDrawerToggle}>\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                </ListItem>\r\n            </div>\r\n            <Divider />\r\n            {user && <Hidden smDown implementation=\"css\">\r\n                <List className={classes.userInfo}>\r\n                    <ListItem className={classes.justCenter}>\r\n                        <IconButton component={RouterLink} to={`/users/${user.login}`} area-label='view' style={{ padding: 0 }}>\r\n                            <Avatar\r\n                                className={classes.avatar}\r\n                                src={user.avatar ? `${SERVER}${user.avatar}` : \"\"}\r\n                                alt={`${user.login}'s avatar`}>\r\n                            </Avatar>\r\n                        </IconButton>\r\n                    </ListItem>\r\n                    <ListItem className={classes.justCenter} dense>\r\n                        <Typography\r\n                            variant=\"h6\"\r\n                            component={RouterLink}\r\n                            to={`/users/${user.login}`}\r\n                            color=\"inherit\"\r\n                            style={{ textDecoration: \"none\" }}\r\n                        >{user.login}</Typography>\r\n                    </ListItem>\r\n                    <ListItem className={classes.justCenter} dense>\r\n                        <List style={{ display: 'flex' }} disablePadding>\r\n                            <ListItem style={{ display: 'flex', flexDirection: \"column\" }} dense>\r\n                                <Typography variant='body1'>Posts</Typography>\r\n                                <Typography variant=\"h6\">{user.posts}</Typography>\r\n                            </ListItem>\r\n                            <ListItem style={{ display: 'flex', flexDirection: \"column\" }} dense>\r\n                                <Typography variant='body1'>Followers</Typography>\r\n                                <Typography variant=\"h6\">{user.followers}</Typography>\r\n                            </ListItem>\r\n                            <ListItem style={{ display: 'flex', flexDirection: \"column\" }} dense>\r\n                                <Typography variant='body1'>Following</Typography>\r\n                                <Typography variant=\"h6\">{user.following}</Typography>\r\n                            </ListItem>\r\n                        </List>\r\n                    </ListItem>\r\n                </List>\r\n            </Hidden>}\r\n            <Divider />\r\n            <List>\r\n                {[\r\n                    { name: \"Home\", icon: <HomeIcon />, index: 1, to: '/' },\r\n                    { name: \"Feed\", icon: <RssFeedIcon />, index: 2, to: \"/feed\" },\r\n                    { name: \"Trending\", icon: <WhatshotIcon />, index: 3, to: \"/trending\" },\r\n                    // { name: \"Explore\", icon: <SearchIcon />, index: 4, to: \"/explore\" },\r\n                    // { name: \"New\", icon: <CollectionsIcon />, index: 4, to: \"/new\" },\r\n                    { name: \"Settings\", icon: <SettingsIcon />, index: 5, to: \"/settings\" },\r\n                    { name: \"My Profile\", icon: <PersonIcon />, index: 6, to: `/users/${authState.username}` }\r\n                ].map((item, index) => (\r\n                    <ListItem button\r\n                        key={item.index}\r\n                        selected={location.pathname === item.to}\r\n                        component={RouterLink}\r\n                        to={item.to}\r\n                        onClick={handleDrawerHide}>\r\n                        <ListItemIcon>{item.icon}</ListItemIcon>\r\n                        <ListItemText primary={item.name} />\r\n                    </ListItem>\r\n                ))}\r\n            </List>\r\n            <Divider />\r\n            <List>\r\n                <ListItem button onClick={() => { handleDrawerHide(); handleLogout(); }}>\r\n                    <ListItemIcon><ExitToAppIcon /></ListItemIcon>\r\n                    <ListItemText primary=\"Logout\" />\r\n                </ListItem>\r\n            </List>\r\n        </div>\r\n    );\r\n\r\n    const renderMenu = (\r\n        <Menu\r\n            anchorEl={anchorEl}\r\n            anchorOrigin={{ vertical: \"top\", horizontal: 'left' }}\r\n            id=\"account-menu\"\r\n            keepMounted\r\n            transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n            open={Boolean(anchorEl)}\r\n            onClose={handleMenuClose}\r\n        >\r\n            {/*<MenuItem>Hi {authState.username}!</MenuItem>*/}\r\n            <MenuItem onClick={handleMenuClose} component={RouterLink} to='/settings'>Account Settings</MenuItem>\r\n            <MenuItem onClick={handleMenuClose} component={RouterLink} to={`/users/${authState.username}`} >Profile</MenuItem>\r\n            <MenuItem onClick={() => { handleMenuClose(); handleLogout(); }}>Logout</MenuItem>\r\n        </Menu>\r\n    );\r\n\r\n    return (\r\n        <ThemeProvider theme={appliedTheme}>\r\n            <div className={classes.root}>\r\n                <CssBaseline />\r\n                <AppBar position=\"fixed\" className={classes.appBar}>\r\n                    <Toolbar>\r\n                        {authState.isAuthenticated ? (\r\n                            <IconButton\r\n                                color=\"inherit\"\r\n                                aria-label=\"open drawer\"\r\n                                edge=\"start\"\r\n                                onClick={handleDrawerToggle}\r\n                                className={classes.menuButton}\r\n                            >\r\n                                <MenuIcon />\r\n                            </IconButton>\r\n                        ) : \"\"}\r\n                        <Typography variant=\"h6\" noWrap className={classes.title} component={RouterLink} to=\"/\" color=\"inherit\">\r\n                            LinkBook\r\n                        </Typography>\r\n                        <div className={classes.grow}></div>\r\n                        {authState.isAuthenticated && <NewPost />}\r\n                        <Tooltip title=\"Theme Toggle\">\r\n                            <IconButton aria-label=\"Theme toggle\" onClick={handleThemeChange} color=\"inherit\">\r\n                                {icon}\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                        {authState.isAuthenticated ? (\r\n                            <React.Fragment>\r\n                                <Notification />\r\n                                <Tooltip title=\"Account\">\r\n                                    <IconButton\r\n                                        aria-label=\"Current User\"\r\n                                        color=\"inherit\"\r\n                                        edge=\"end\"\r\n                                        aria-controls=\"account-menu\"\r\n                                        aria-haspopup=\"true\"\r\n                                        onClick={handleProfileMenuOpen}\r\n                                    >\r\n                                        <AccountCircle />\r\n                                    </IconButton>\r\n                                </Tooltip>\r\n\r\n                            </React.Fragment>\r\n                        ) : (\r\n                            <React.Fragment>\r\n                                <Button color=\"inherit\" component={Link} to=\"/login\" className={classes.mrLeft}>Login</Button>\r\n                                <Button color=\"inherit\" component={Link} to=\"/register\" className={classes.mrLeft}>Register</Button>\r\n                            </React.Fragment>\r\n                        )}\r\n                    </Toolbar>\r\n                </AppBar>\r\n                {renderMenu}\r\n                {authState.isAuthenticated ? (\r\n                    <nav className={classes.drawer} aria-label=\"Drawer\">\r\n                        {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\r\n                        <Hidden mdUp implementation=\"css\">\r\n                            <Drawer\r\n                                container={container}\r\n                                variant=\"temporary\"\r\n                                anchor={theme.direction === 'rtl' ? 'right' : 'left'}\r\n                                open={mobileOpen}\r\n                                onClose={handleDrawerToggle}\r\n                                classes={{\r\n                                    paper: classes.drawerPaper,\r\n                                }}\r\n                                ModalProps={{\r\n                                    keepMounted: true, // Better open performance on mobile.\r\n                                }}\r\n                            >\r\n                                {drawer}\r\n                            </Drawer>\r\n                        </Hidden>\r\n                        <Hidden smDown implementation=\"css\">\r\n                            <Drawer\r\n                                classes={{\r\n                                    paper: classes.drawerPaper,\r\n                                }}\r\n                                variant=\"permanent\"\r\n                                open\r\n                            >\r\n                                {drawer}\r\n                            </Drawer>\r\n                        </Hidden>\r\n                    </nav>)\r\n                    : \"\"\r\n                }\r\n                <main className={classes.content}>\r\n                    <div className={classes.toolbar} />\r\n                    <Container maxWidth=\"xl\">\r\n                        <UserContext.Provider value={user}>\r\n                            {props.children}\r\n                        </UserContext.Provider>\r\n                    </Container>\r\n\r\n                </main>\r\n            </div>\r\n        </ThemeProvider>\r\n    );\r\n}\r\n\r\nNavigation.propTypes = {\r\n    /**\r\n     * Injected by the documentation to work in an iframe.\r\n     * You won't need it on your project.\r\n     */\r\n    window: PropTypes.func,\r\n};\r\n\r\nexport default Navigation;","import { Avatar, CardContent, IconButton, Typography } from '@material-ui/core'\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport React, { Component } from 'react'\r\nimport formateDate from '../utils/FormatDate';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport { SERVER } from '../config'\r\n\r\nexport class Comment extends Component {\r\n    state = {\r\n        user: null,\r\n        isLoading: true\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(`${SERVER}/users/avatar?userId=${this.props.comment.userId}`, {\r\n            method: 'GET',\r\n            credentials: 'include',\r\n        })\r\n            .then(response => response.json())\r\n            .then(res => {\r\n                if (res.success) {\r\n                    this.setState({ user: res, isLoading: false });\r\n                } else {\r\n                    this.setState({ user: { login: null, avatar: null, userId: this.props.comment.userID }, isLoading: false });\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                this.setState({ user: { login: null, avatar: null, userId: this.props.comment.userID }, isLoading: false });\r\n            });\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <CardContent style={{ display: 'flex' }}>\r\n                    {!this.state.isLoading ? (<IconButton\r\n                        component={RouterLink}\r\n                        to={`/users/${this.state.user.login}`}\r\n                        aria-label=\"user profile\"\r\n                        style={{ padding: 0, height: 'max-content' }}>\r\n                        <Avatar\r\n                            aria-label=\"user avatar\"\r\n                            src={this.state.user.avatar ? `${SERVER}${this.state.user.avatar}` : \"\"}>\r\n                        </Avatar>\r\n                    </IconButton>)\r\n                        : (<Skeleton animation=\"wave\" variant=\"circle\" width={40} height={40} />)\r\n                    }\r\n                    <div style={{ marginLeft: 16, flexGrow: 1 }} >\r\n                        {!this.state.isLoading ? (<Typography component=\"p\">\r\n                            <Typography\r\n                                variant='subtitle2'\r\n                                component={RouterLink}\r\n                                to={`/users/${this.state.user.login}`}\r\n                                color=\"inherit\"\r\n                                style={{ textDecoration: \"none\" }}\r\n                            >\r\n                                {this.state.user.login}\r\n                            </Typography>\r\n                            <Typography\r\n                                component='span'\r\n                                variant='caption'\r\n                                style={{ marginLeft: 8 }}>\r\n                                {formateDate(this.props.comment.created_at)}\r\n                            </Typography>\r\n                        </Typography>)\r\n                            : (<Skeleton animation=\"wave\" height={10} width=\"40%\" style={{ marginBottom: 18 }} />)\r\n                        }\r\n                        {!this.state.isLoading ? (<Typography component=\"p\" variant='body2' style={{ marginTop: 8 }}>\r\n                            {this.props.comment.value}\r\n                        </Typography>)\r\n                            : (<Skeleton animation=\"wave\" height={10} width=\"80%\" style={{ marginBottom: 12 }} />)\r\n                        }\r\n                    </div>\r\n                </CardContent>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Comment\r\n","import {\r\n    Avatar,\r\n    Card,\r\n    CardHeader,\r\n    CardMedia,\r\n    IconButton,\r\n    Typography,\r\n    CardContent,\r\n    CardActions,\r\n    Tooltip,\r\n    Collapse,\r\n    Divider,\r\n    TextField,\r\n    CircularProgress,\r\n    Menu,\r\n    MenuItem,\r\n} from '@material-ui/core';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport ThumbUpAltOutlinedIcon from '@material-ui/icons/ThumbUpAltOutlined';\r\n// import ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\r\nimport CommentOutlinedIcon from '@material-ui/icons/CommentOutlined';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Comment from './Comment';\r\nimport AuthContext from '../utils/AuthContext';\r\nimport { useSnackbar } from 'notistack';\r\nimport UserContext from '../utils/UserContext';\r\nimport { SERVER } from \"../config\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        borderRadius: 10,\r\n        margin: 'auto',\r\n        marginBottom: theme.spacing(3),\r\n    },\r\n    cardContent: {\r\n        paddingTop: 0,\r\n        paddingBottom: 0,\r\n    },\r\n    marginLeft: {\r\n        marginLeft: theme.spacing(2)\r\n    },\r\n    commentForm: {\r\n        display: 'flex',\r\n        alignItems: \"center\",\r\n    },\r\n    commentAvatar: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    progressbar: {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        marginTop: -4,\r\n        marginLeft: -12,\r\n    },\r\n    noPadding: {\r\n        padding: 0,\r\n    },\r\n    media: {\r\n        paddingTop: '56.25%',\r\n    },\r\n}));\r\n\r\nexport default function PostCard(props) {\r\n    const classes = useStyles();\r\n    const [hide, setHide] = React.useState(false);\r\n    const [loading, setLoading] = React.useState(true);\r\n\r\n    const { authDispatch } = React.useContext(AuthContext);\r\n    const [post, setPost] = React.useState(props.post);\r\n    const [values, setValues] = React.useState({\r\n        comment: ''\r\n    });\r\n    const [liked, setLiked] = React.useState()\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n    const user = React.useContext(UserContext);\r\n\r\n    const [disableBtn, setDisableBtn] = React.useState({\r\n        comment: false,\r\n        delete: false,\r\n    });\r\n    const [expanded, setExpanded] = React.useState(false);\r\n\r\n    const { enqueueSnackbar } = useSnackbar();\r\n\r\n    const date = new Date(post.created_at);\r\n    const t = date.toDateString().split(\" \");\r\n\r\n    const handlePostMenuOpen = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleMenuClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const handleDeletePost = () => {\r\n        const data = { postId: post.postId };\r\n        if (window.confirm('Are you sure you want to delete post?')) {\r\n            fetch(`${SERVER}/posts/delete`, {\r\n                method: 'DELETE',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                credentials: 'include',\r\n                body: JSON.stringify(data),\r\n            })\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    if (data.success) {\r\n                        enqueueSnackbar('Post Deleted!', { variant: \"success\" });\r\n                        authDispatch({\r\n                            type: 'REFUSER',\r\n                        });\r\n                        setHide(true);\r\n                    } else {\r\n                        enqueueSnackbar(data.message, { variant: \"error\" });\r\n                        setDisableBtn({\r\n                            delete: false\r\n                        })\r\n                    }\r\n                })\r\n                .catch((error) => {\r\n                    enqueueSnackbar('Post deletion failed!', { variant: \"error\" });\r\n                    setDisableBtn({\r\n                        delete: false\r\n                    })\r\n                    console.error('Error:', error);\r\n                });\r\n        }\r\n    }\r\n\r\n    const isMenuOpen = Boolean(anchorEl)\r\n    const menuId = `post-${post.postId}-menu`;\r\n    const renderMenu = (\r\n        <Menu\r\n            anchorEl={anchorEl}\r\n            anchorOrigin={{ vertical: 'top', horizontal: 'left' }}\r\n            id={menuId}\r\n            keepMounted\r\n            transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n            open={isMenuOpen}\r\n            onClose={handleMenuClose}\r\n        >\r\n            {/*<MenuItem>Hi {authState.username}!</MenuItem>*/}\r\n            <MenuItem onClick={handleMenuClose} disabled>Save Post</MenuItem>\r\n            <MenuItem onClick={handleMenuClose} disabled>Report post</MenuItem>\r\n            {!loading && props.notSkeleton && post.owner && user.userId === post.owner.userId && (<div>\r\n                {/*<Divider />*/}\r\n                <MenuItem onClick={() => { handleMenuClose(); handleDeletePost(); }} >\r\n                    <Typography color='secondary'>Delete post</Typography>\r\n                </MenuItem>\r\n            </div>)}\r\n        </Menu>\r\n    );\r\n\r\n    const handleExpandClick = () => {\r\n        setExpanded(!expanded);\r\n    };\r\n    const handleChange = (event) => {\r\n        setValues({ ...values, comment: event.target.value });\r\n    }\r\n\r\n    const handleSubmitNewComment = (e) => {\r\n        e.preventDefault()\r\n        if (values.comment) {\r\n            setDisableBtn({ comment: true })\r\n            const body = { postId: post.postId, value: values.comment }\r\n            fetch(`${SERVER}/posts/comment`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                credentials: 'include',\r\n                body: JSON.stringify(body)\r\n            })\r\n                .then(response => response.json())\r\n                .then(res => {\r\n                    if (res.success) {\r\n                        setValues({ comment: '' });\r\n                        enqueueSnackbar(res.message, { variant: \"success\" });\r\n                        var comments = post.commentslist;\r\n                        comments.unshift(res);\r\n                        setPost({\r\n                            ...post,\r\n                            comments: post.comments + 1,\r\n                            commentslist: comments\r\n                        });\r\n                    } else {\r\n                        if (res.status === 401)\r\n                            authDispatch({\r\n                                type: \"logout\"\r\n                            })\r\n                        enqueueSnackbar(res.message, { variant: \"error\" });\r\n\r\n                    }\r\n                    setDisableBtn({ comment: false });\r\n                })\r\n                .catch((error) => {\r\n                    enqueueSnackbar('Failed to get post', { variant: \"error\" });\r\n                    setDisableBtn({ comment: false });\r\n                    console.error('Error:', error);\r\n                });\r\n        } else {\r\n            enqueueSnackbar(\"Comment can't be empty\", { variant: \"warning\" });\r\n        }\r\n    }\r\n\r\n    const handleLike = () => {\r\n        fetch(`${SERVER}/posts/like?postId=${post.postId}`, {\r\n            method: 'POST',\r\n            credentials: 'include',\r\n        })\r\n            .then(response => response.json())\r\n            .then(res => {\r\n                if (res.success) {\r\n                    if (res.success) {\r\n                        if (res.liked) {\r\n                            setPost({\r\n                                ...post,\r\n                                likes: post.likes + 1,\r\n                            })\r\n                        } else {\r\n                            setPost({\r\n                                ...post,\r\n                                likes: post.likes - 1,\r\n                            })\r\n                        }\r\n                        setLiked(res.liked)\r\n                        // enqueueSnackbar(res.message, { variant: \"success\" });\r\n                    } else {\r\n                        if (res.status === 401)\r\n                            authDispatch({\r\n                                type: \"logout\"\r\n                            })\r\n                        enqueueSnackbar(res.message, { variant: \"error\" });\r\n                    }\r\n                }\r\n\r\n            })\r\n            .catch((error) => {\r\n                enqueueSnackbar('Failed to like post', { variant: \"error\" });\r\n            });\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        if (props.notSkeleton && post.postId) {\r\n            fetch(`${SERVER}/posts/like?postId=${post.postId}`, {\r\n                method: 'GET',\r\n                credentials: 'include',\r\n            })\r\n                .then(response => response.json())\r\n                .then(res => {\r\n                    if (res.success) {\r\n                        setLiked(res.liked);\r\n                        // enqueueSnackbar(res.message, { variant: \"success\" });\r\n                    }\r\n                    // else {\r\n                    // if (res.status === 401)\r\n                    //     authDispatch({\r\n                    //         type: \"logout\"\r\n                    //     })\r\n                    // }\r\n                    setLoading(false);\r\n                })\r\n                .catch((error) => {\r\n                    setLoading(false);\r\n                    // enqueueSnackbar('Failed to like post', { variant: \"error\" });\r\n                })\r\n        }\r\n    }, [setLiked, post.postId, props.notSkeleton])\r\n\r\n    // React.useState(() => {\r\n    //     if (post !== props.post) {\r\n    //         setPost(props.post);\r\n    //     }\r\n    // }, [props.post])\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {!hide && <Card className={classes.card} variant=\"outlined\">\r\n                <CardHeader\r\n                    avatar={!loading && props.notSkeleton ? (<IconButton\r\n                        component={RouterLink}\r\n                        to={`/users/${post.owner.login}`}\r\n                        className={classes.noPadding}\r\n                        aria-label=\"user profile\">\r\n                        <Avatar aria-label=\"user avatar\" alt={post.owner.login} src={post.owner.avatar ? `${SERVER}${post.owner.avatar}` : \"\"}>\r\n                        </Avatar>\r\n                    </IconButton>)\r\n                        : (<Skeleton animation=\"wave\" variant=\"circle\" width={40} height={40} />)\r\n                    }\r\n                    action={!loading && props.notSkeleton ?\r\n                        (<IconButton\r\n                            aria-label=\"Post options\"\r\n                            aria-controls={menuId}\r\n                            aria-haspopup=\"true\"\r\n                            onClick={handlePostMenuOpen}\r\n                        >\r\n                            <MoreVertIcon />\r\n                        </IconButton>)\r\n                        : null\r\n                    }\r\n                    title={!loading ? (\r\n                        <Typography\r\n                            component={RouterLink}\r\n                            to={`/users/${post.owner.login}`}\r\n                            color=\"inherit\"\r\n                            variant=\"body2\"\r\n                            style={{ textDecoration: \"none\" }}>\r\n                            {post.owner.login}\r\n                        </Typography>\r\n                    )\r\n                        : (<Skeleton animation=\"wave\" height={10} width=\"80%\" style={{ marginBottom: 6 }} />)}\r\n                    subheader={!loading ? `${t[1]} ${t[2]} ${t[3]}` : (<Skeleton animation=\"wave\" height={10} width=\"40%\" />)}\r\n                />\r\n                {!loading && props.notSkeleton ?\r\n                    (post.postImage && <CardMedia\r\n                        style={{\r\n                            height: 0,\r\n                            paddingTop: '56.25%',\r\n                        }}\r\n                        image={`${SERVER}${post.postImage}`}\r\n                        title={`${post.owner.login}'s post`}\r\n                        alt={post.postImage}\r\n                        to={`/posts/${post.postId}`}\r\n                        component={props.single ? CardContent : RouterLink}\r\n                    />\r\n                    )\r\n                    : (<Skeleton animation=\"wave\" variant=\"rect\" className={classes.media} />)\r\n                }\r\n                <CardContent>\r\n                    {!loading && props.notSkeleton ? (<Typography component=\"p\">\r\n                        {post.postText}\r\n                    </Typography>)\r\n                        : (<React.Fragment>\r\n                            <Skeleton animation=\"wave\" height={10} style={{ marginBottom: 6 }} />\r\n                            <Skeleton animation=\"wave\" height={10} width=\"80%\" />\r\n                        </React.Fragment>)\r\n                    }\r\n                </CardContent>\r\n\r\n                {!loading && props.notSkeleton ? (<Typography className={classes.marginLeft} variant='subtitle2' component=\"p\">\r\n                    {post.likes} {post.like > 1 ? \"Likes\" : \"Like\"}\r\n                    <Typography component=\"span\" variant='subtitle2' className={classes.marginLeft}>{post.comments} {post.comments > 1 ? \"Comments\" : \"Comment\"}</Typography>\r\n                </Typography>)\r\n                    : (<Skeleton animation=\"wave\" height={10} width=\"50%\" style={{ marginLeft: 16, marginBottom: 11 }} />)\r\n                }\r\n                <CardActions disableSpacing >\r\n                    {props.notSkeleton ? (<React.Fragment>\r\n                        {liked ? <Tooltip title=\"Unlike this\">\r\n                            <IconButton aria-label=\"unlike\" onClick={handleLike} color='primary'>\r\n                                <ThumbUpAltOutlinedIcon color=\"inherit\" />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                            : <Tooltip title=\"Like this\">\r\n                                <IconButton aria-label=\"like\" onClick={handleLike}>\r\n                                    <ThumbUpAltOutlinedIcon />\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                        }\r\n                        <Tooltip title=\"Comments\">\r\n                            <IconButton className={classes.marginLeft} aria-label=\"comment\" onClick={handleExpandClick}>\r\n                                <CommentOutlinedIcon />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                        <Tooltip title=\"Share this\">\r\n                            <IconButton aria-label=\"share\" className={classes.marginLeft}>\r\n                                <ShareIcon />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    </React.Fragment>)\r\n                        : (<div style={{ height: 36 }}></div>)\r\n                    }\r\n                </CardActions>\r\n                <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n                    <Divider />\r\n                    <CardContent>\r\n                        <form onSubmit={handleSubmitNewComment} className={classes.commentForm}>\r\n                            {user && <Avatar src={user.avatar ? `${SERVER}${user.avatar}` : \"\"} className={classes.commentAvatar}></Avatar>}\r\n                            <TextField id=\"commentInput\" label=\"Write a comment...\" onChange={handleChange} value={values.comment} fullWidth />\r\n                            <div style={{ position: 'relative' }}>\r\n                                <Tooltip title=\"Add Comment\">\r\n                                    <IconButton aria-label=\"add comment\" color=\"primary\" type='submit' disabled={disableBtn.comment}>\r\n                                        <SendIcon />\r\n                                    </IconButton>\r\n                                </Tooltip>\r\n                                {disableBtn.comment && <CircularProgress size={24} className={classes.progressbar}></CircularProgress>}\r\n                            </div>\r\n                        </form>\r\n                    </CardContent>\r\n                    {props.notSkeleton && (post.commentslist.map(comment => <Comment comment={comment} key={comment.commentId} />))}\r\n                </Collapse>\r\n            </Card>}\r\n            {renderMenu}\r\n        </React.Fragment>\r\n    )\r\n}\r\n","import React, { Component } from 'react';\r\nimport PostCard from '../components/PostCard';\r\nimport { SERVER } from '../config';\r\nimport {\r\n    Button,\r\n    CircularProgress,\r\n    Box,\r\n} from '@material-ui/core';\r\n\r\nexport class GetPosts extends Component {\r\n    state = {\r\n        data: null,\r\n        loadMore: false,\r\n        nextPage: 1\r\n    }\r\n\r\n    nullPost = { postId: null, userId: null, postImage: null, postText: null, created_at: null };\r\n\r\n    getPosts = (page) => {\r\n        fetch(`${SERVER}${this.props.url}?page=${page}`, {\r\n            method: 'GET',\r\n            credentials: 'include',\r\n        })\r\n            .then(response => response.json())\r\n            .then(res => {\r\n                if (res.success) {\r\n                    if (this.state.nextPage > 1) {\r\n                        this.setState({\r\n                            ...this.state,\r\n                            data: {\r\n                                next: res.next,\r\n                                posts: this.state.data.posts.concat(res.posts)\r\n                            },\r\n                            nextPage: this.state.nextPage + 1,\r\n                            loadMore: false,\r\n                        });\r\n                    } else {\r\n                        this.setState({\r\n                            ...this.state,\r\n                            data: res,\r\n                            nextPage: this.state.nextPage + 1,\r\n                            loadMore: false,\r\n                        });\r\n                    }\r\n                } else {\r\n                    // enqueueSnackbar(res.message, { variant: \"error\" });\r\n                    this.setState({\r\n                        ...this.state,\r\n                        nextPage: this.state.nextPage - 1,\r\n                        loadMore: false\r\n                    });\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                // enqueueSnackbar('Failed to get post', { variant: \"error\" });\r\n                this.setState({\r\n                    ...this.state,\r\n                    nextPage: this.state.nextPage - 1,\r\n                    loadMore: false\r\n                });\r\n                console.error('Error:', error);\r\n            });\r\n    }\r\n\r\n    handleLoadMore = () => {\r\n        this.setState({\r\n            ...this.state,\r\n            loadMore: true\r\n        })\r\n        this.getPosts(this.state.nextPage);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getPosts(this.state.nextPage);\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.authState.refreshPost !== prevProps.authState.refreshPost) {\r\n            this.setState({\r\n                ...this.state,\r\n                nextPage: 1,\r\n            })\r\n            this.getPosts(1);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                {this.state.data ? (this.state.data.posts.map(post => <PostCard post={post} notSkeleton={true} key={post.postId} />))\r\n                    : (<React.Fragment>\r\n                        <PostCard notSkeleton={false} post={this.nullPost} key='skelton1' />\r\n                        <PostCard notSkeleton={false} post={this.nullPost} key='skelton2' />\r\n                    </React.Fragment>)\r\n                }\r\n                {this.state.data && this.state.data.next && <Box\r\n                    display=\"flex\"\r\n                    justifyContent=\"center\"\r\n                    style={{\r\n                        position: 'relative',\r\n                        marginBottom: 24,\r\n                    }}>\r\n                    <Button\r\n                        variant='outlined'\r\n                        color=\"primary\"\r\n                        onClick={this.handleLoadMore}\r\n                        disabled={this.state.loadMore}>\r\n                        Load More\r\n                    </Button>\r\n                    {this.state.loadMore && <CircularProgress\r\n                        size={24}\r\n                        style={{\r\n                            position: 'absolute',\r\n                            top: '50%',\r\n                            left: '50%',\r\n                            marginTop: -12,\r\n                            marginLeft: -12,\r\n                        }}>\r\n                    </CircularProgress>}\r\n                </Box>}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default GetPosts\r\n","import React from 'react'\r\nimport {\r\n    Container,\r\n    Box,\r\n    Typography,\r\n} from '@material-ui/core'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n// import { useSnackbar } from 'notistack';\r\nimport AuthContext from '../utils/AuthContext';\r\nimport GetPosts from '../components/GetPosts';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        [theme.breakpoints.up('sm')]: {\r\n            margin: theme.spacing(2),\r\n        }\r\n    },\r\n    marginBottom: {\r\n        marginBottom: theme.spacing(3),\r\n    },\r\n}));\r\n\r\nfunction Home() {\r\n    const { authState } = React.useContext(AuthContext);\r\n    const classes = useStyles();\r\n\r\n    // const { enqueueSnackbar } = useSnackbar();\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Box className={classes.root}>\r\n                <Container maxWidth=\"sm\" disableGutters>\r\n                    <Typography variant=\"h4\" className={classes.marginBottom}>Latest Posts</Typography>\r\n                    <GetPosts authState={authState} url=\"/posts/\" />\r\n                </Container>\r\n                {/*<div style={{ flexGrow: 1 }}></div>*/}\r\n            </Box>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport {\r\n    CircularProgress,\r\n    Box,\r\n    Container,\r\n    Input,\r\n    Typography,\r\n    FormControl,\r\n    InputLabel,\r\n    InputAdornment,\r\n    IconButton,\r\n    Button,\r\n    Link\r\n} from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\r\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport AuthContext from \"../utils/AuthContext\";\r\nimport clsx from 'clsx';\r\nimport { validateEmail, validatePassword } from '../utils/validator'\r\nimport { useSnackbar } from 'notistack';\r\nimport { SERVER } from '../config'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    margin: {\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    relative: {\r\n        position: 'relative',\r\n    },\r\n    progressbar: {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        marginTop: -12,\r\n        marginLeft: -12,\r\n    }\r\n}));\r\n\r\n\r\nfunction Login() {\r\n    const classes = useStyles();\r\n    const [values, setValues] = React.useState({\r\n        email: '',\r\n        password: '',\r\n        showPassword: false,\r\n    });\r\n    const [errors, setErrors] = React.useState({\r\n        email: false,\r\n        password: false,\r\n    });\r\n    const [disableBtn, setDisableBtn] = React.useState({\r\n        submit: false,\r\n    })\r\n    const { enqueueSnackbar } = useSnackbar();\r\n\r\n\r\n    const { authDispatch } = React.useContext(AuthContext);\r\n\r\n    const handleChange = (prop) => (event) => {\r\n        setValues({ ...values, [prop]: event.target.value });\r\n        if (prop === \"email\") {\r\n            setErrors({\r\n                email: !validateEmail(event.target.value)\r\n            })\r\n        } else if (prop === \"password\") {\r\n            setErrors({\r\n                password: !validatePassword(event.target.value)\r\n            })\r\n        }\r\n    };\r\n\r\n    const handleClickShowPassword = () => {\r\n        setValues({ ...values, showPassword: !values.showPassword });\r\n    };\r\n\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    const handleLogin = async (e) => {\r\n        e.preventDefault();\r\n        if (!errors.email && !errors.password && values.password && values.email) {\r\n            setDisableBtn({\r\n                submit: true\r\n            });\r\n            const data = { email: values.email, password: values.password }\r\n            await fetch(`${SERVER}/auth/login`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                credentials: 'include',\r\n                body: JSON.stringify(data),\r\n            })\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    if (data.success) {\r\n                        enqueueSnackbar('Login successfully!', { variant: \"success\" });\r\n                        authDispatch({\r\n                            type: 'LOGIN',\r\n                            payload: data\r\n                        });\r\n                    } else {\r\n                        enqueueSnackbar(data.message, { variant: \"error\" });\r\n                        setDisableBtn({\r\n                            submit: false\r\n                        })\r\n                    }\r\n                })\r\n                .catch((error) => {\r\n                    enqueueSnackbar('Login failed!', { variant: \"error\" });\r\n                    setDisableBtn({\r\n                        submit: false\r\n                    })\r\n                    console.error('Error:', error);\r\n                });\r\n        } else {\r\n            enqueueSnackbar('Email and Password should be valid.', { variant: \"warning\" });\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Container maxWidth=\"xs\" disableGutters>\r\n                <Box mt={5}>\r\n                    <form onSubmit={handleLogin}>\r\n                        <Typography variant=\"h4\" color=\"initial\">Log In</Typography>\r\n                        <Typography variant=\"body1\" color=\"inherit\">with your LinkBook account</Typography>\r\n                        <Box mt={2}>\r\n                            <FormControl fullWidth className={classes.margin} error={errors.email}>\r\n                                <InputLabel htmlFor=\"userEmail\">Email</InputLabel>\r\n                                <Input\r\n                                    id=\"userEmail\"\r\n                                    value={values.email}\r\n                                    onChange={handleChange('email')}\r\n                                    startAdornment={\r\n                                        <InputAdornment position=\"start\" >\r\n                                            <MailIcon />\r\n                                        </InputAdornment>\r\n                                    }\r\n                                />\r\n                            </FormControl>\r\n                            <FormControl fullWidth className={classes.margin} error={errors.password}>\r\n                                <InputLabel htmlFor=\"userPassword\">Password</InputLabel>\r\n                                <Input\r\n                                    id=\"userPassword\"\r\n                                    type={values.showPassword ? 'text' : 'password'}\r\n                                    value={values.password}\r\n                                    onChange={handleChange('password')}\r\n                                    startAdornment={\r\n                                        <InputAdornment position=\"start\" >\r\n                                            <VpnKeyIcon />\r\n                                        </InputAdornment>\r\n                                    }\r\n                                    endAdornment={\r\n                                        <InputAdornment position=\"end\" >\r\n                                            <IconButton\r\n                                                aria-label=\"toggle password visibility\"\r\n                                                onClick={handleClickShowPassword}\r\n                                                onMouseDown={handleMouseDownPassword}\r\n                                            >\r\n                                                {values.showPassword ? <VisibilityIcon /> : <VisibilityOffIcon />}\r\n                                            </IconButton>\r\n                                        </InputAdornment>\r\n                                    }\r\n                                />\r\n                            </FormControl>\r\n                            <FormControl className={classes.margin}>\r\n                                <Link component={RouterLink} to=\"/forgetpass\" color=\"primary\">Forgot Your Password?</Link>\r\n                            </FormControl>\r\n                            <FormControl fullWidth className={clsx(classes.margin, classes.relative)} >\r\n                                <Button variant=\"contained\" color=\"primary\" disabled={disableBtn.submit} type='submit'>Log In</Button>\r\n                                {disableBtn.submit && <CircularProgress size={24} className={classes.progressbar}></CircularProgress>}\r\n                            </FormControl>\r\n                            <Typography variant=\"subtitle1\" color=\"initial\" className={classes.margin} align=\"center\">\r\n                                Not registered? <Link component={RouterLink} to=\"/register\" color=\"primary\">Create a account</Link>\r\n                            </Typography>\r\n                        </Box>\r\n                    </form>\r\n                </Box>\r\n            </Container>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import React from 'react';\r\nimport { Link as RouterLink, useHistory } from 'react-router-dom'\r\nimport {\r\n    CircularProgress,\r\n    Box,\r\n    Container,\r\n    Input,\r\n    Typography,\r\n    FormControl,\r\n    InputLabel,\r\n    InputAdornment,\r\n    IconButton,\r\n    Button,\r\n    Link,\r\n    FormHelperText\r\n} from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\r\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport clsx from 'clsx';\r\nimport { useSnackbar } from 'notistack';\r\nimport { validateEmail, validatePassword, validateUsername } from '../utils/validator'\r\nimport { SERVER } from '../config'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    margin: {\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    relative: {\r\n        position: 'relative',\r\n    },\r\n    progressbar: {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        marginTop: -12,\r\n        marginLeft: -12,\r\n    }\r\n}));\r\n\r\nfunction Register() {\r\n    const classes = useStyles();\r\n    const [values, setValues] = React.useState({\r\n        username: '',\r\n        email: '',\r\n        password: '',\r\n        confirmPassword: '',\r\n        showPassword: false,\r\n        showConfirmPassword: false,\r\n    });\r\n    const [errors, setErrors] = React.useState({\r\n        username: false,\r\n        email: false,\r\n        password: false,\r\n        confirmPassword: false\r\n    });\r\n    const [disableBtn, setDisableBtn] = React.useState({\r\n        submit: false,\r\n    })\r\n    const { enqueueSnackbar } = useSnackbar();\r\n\r\n    const history = useHistory();\r\n\r\n    const handleChange = (prop) => (event) => {\r\n        setValues({ ...values, [prop]: event.target.value });\r\n        if (prop === \"email\") {\r\n            setErrors({\r\n                email: !validateEmail(event.target.value)\r\n            })\r\n        } else if (prop === \"password\") {\r\n            setErrors({\r\n                password: !validatePassword(event.target.value)\r\n            })\r\n        } else if (prop === \"username\") {\r\n            setErrors({\r\n                username: !validateUsername(event.target.value)\r\n            })\r\n        } else if (prop === \"confirmPassword\") {\r\n            setErrors({\r\n                confirmPassword: event.target.value !== values.password ? true : false\r\n            })\r\n        }\r\n    };\r\n\r\n    const handleClickShowPassword = () => {\r\n        setValues({ ...values, showPassword: !values.showPassword });\r\n    };\r\n\r\n    const handleClickShowConfirmPassword = () => {\r\n        setValues({ ...values, showConfirmPassword: !values.showConfirmPassword });\r\n    };\r\n\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    const handleRegister = async (e) => {\r\n        e.preventDefault();\r\n        if (!errors.email && !errors.password && values.username && values.password && values.email && values.confirmPassword) {\r\n            setDisableBtn({\r\n                submit: true\r\n            });\r\n            const data = {\r\n                username: values.username,\r\n                email: values.email,\r\n                password: values.password,\r\n                confirmPassword: values.confirmPassword\r\n            }\r\n            await fetch(`${SERVER}/auth/register`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                credentials: 'include',\r\n                body: JSON.stringify(data),\r\n            })\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    if (data.success) {\r\n                        const variant = 'success';\r\n                        enqueueSnackbar('Registered successfully!', { variant });\r\n                        history.push(\"/login\")\r\n                    } else {\r\n                        const variant = 'error';\r\n                        enqueueSnackbar(data.message, { variant });\r\n                        setDisableBtn({\r\n                            submit: false\r\n                        })\r\n                    }\r\n                })\r\n                .catch((error) => {\r\n                    const variant = 'error';\r\n                    enqueueSnackbar('Registration failed!', { variant });\r\n                    setDisableBtn({\r\n                        submit: false\r\n                    })\r\n                    console.error('Error:', error);\r\n                });\r\n        } else {\r\n            enqueueSnackbar('Username, Email and Password should be valid.', { variant: \"warning\" });\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Container maxWidth=\"xs\" disableGutters>\r\n                <Box mt={5}>\r\n                    <form onSubmit={handleRegister}>\r\n                        <Typography variant=\"h4\" color=\"initial\">Register</Typography>\r\n                        <Typography variant=\"body1\" color=\"inherit\">to manage your account on LinkBook</Typography>\r\n                        <Box mt={2}>\r\n                            <FormControl fullWidth className={classes.margin} error={errors.username}>\r\n                                <InputLabel htmlFor=\"userUsername\">Username</InputLabel>\r\n                                <Input\r\n                                    id=\"userUsername\"\r\n                                    type='text'\r\n                                    value={values.username}\r\n                                    onChange={handleChange('username')}\r\n                                    startAdornment={\r\n                                        <InputAdornment position=\"start\" >\r\n                                            <PersonIcon />\r\n                                        </InputAdornment>\r\n                                    }\r\n                                />\r\n                            </FormControl>\r\n                            <FormControl fullWidth className={classes.margin} error={errors.email}>\r\n                                <InputLabel htmlFor=\"userEmail\">Email</InputLabel>\r\n                                <Input\r\n                                    id=\"userEmail\"\r\n                                    type='email'\r\n                                    value={values.email}\r\n                                    onChange={handleChange('email')}\r\n                                    startAdornment={\r\n                                        <InputAdornment position=\"start\" >\r\n                                            <MailIcon />\r\n                                        </InputAdornment>\r\n                                    }\r\n                                />\r\n                            </FormControl>\r\n                            <FormControl fullWidth className={classes.margin} error={errors.password}>\r\n                                <InputLabel htmlFor=\"userPassword\">Password</InputLabel>\r\n                                <Input\r\n                                    id=\"userPassword\"\r\n                                    type={values.showPassword ? 'text' : 'password'}\r\n                                    value={values.password}\r\n                                    onChange={handleChange('password')}\r\n                                    startAdornment={\r\n                                        <InputAdornment position=\"start\" >\r\n                                            <VpnKeyIcon />\r\n                                        </InputAdornment>\r\n                                    }\r\n                                    endAdornment={\r\n                                        <InputAdornment position=\"end\" >\r\n                                            <IconButton\r\n                                                aria-label=\"toggle password visibility\"\r\n                                                onClick={handleClickShowPassword}\r\n                                                onMouseDown={handleMouseDownPassword}\r\n                                            >\r\n                                                {values.showPassword ? <VisibilityIcon /> : <VisibilityOffIcon />}\r\n                                            </IconButton>\r\n                                        </InputAdornment>\r\n                                    }\r\n                                />\r\n                                <FormHelperText>Use 8 or more characters with a mix of letters, numbers & symbols</FormHelperText>\r\n                            </FormControl>\r\n                            <FormControl fullWidth className={classes.margin} error={errors.confirmPassword}>\r\n                                <InputLabel htmlFor=\"userConfirmPassword\">Confirm Password</InputLabel>\r\n                                <Input\r\n                                    id=\"userConfirmPassword\"\r\n                                    type={values.showConfirmPassword ? 'text' : 'password'}\r\n                                    value={values.confirmPassword}\r\n                                    onChange={handleChange('confirmPassword')}\r\n                                    startAdornment={\r\n                                        <InputAdornment position=\"start\" >\r\n                                            <VpnKeyIcon />\r\n                                        </InputAdornment>\r\n                                    }\r\n                                    endAdornment={\r\n                                        <InputAdornment position=\"end\" >\r\n                                            <IconButton\r\n                                                aria-label=\"toggle confirm password visibility\"\r\n                                                onClick={handleClickShowConfirmPassword}\r\n                                                onMouseDown={handleMouseDownPassword}\r\n                                            >\r\n                                                {values.showConfirmPassword ? <VisibilityIcon /> : <VisibilityOffIcon />}\r\n                                            </IconButton>\r\n                                        </InputAdornment>\r\n                                    }\r\n                                />\r\n                            </FormControl>\r\n                            { /*<FormControl className={classes.margin}>\r\n                                <Link href=\"/forgetpass\" color=\"primary\">Forgot Your Password?</Link>\r\n                                </FormControl>*/}\r\n                            <FormControl fullWidth className={clsx(classes.margin, classes.relative)} >\r\n                                <Button variant=\"contained\" color=\"primary\" type='submit' disabled={disableBtn.submit}>Register</Button>\r\n                                {disableBtn.submit && <CircularProgress size={24} className={classes.progressbar}></CircularProgress>}\r\n                            </FormControl>\r\n                            <Typography variant=\"subtitle1\" color=\"initial\" className={classes.margin} align=\"center\">\r\n                                Do you have an account? <Link color=\"primary\" component={RouterLink} to=\"/login\" >Login</Link>\r\n                            </Typography>\r\n                        </Box>\r\n                    </form>\r\n                </Box>\r\n            </Container>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Register\r\n","import React from 'react'\r\nimport {\r\n    Tooltip,\r\n    IconButton,\r\n    Modal,\r\n    Fade,\r\n    Backdrop,\r\n    Card,\r\n    CardActionArea,\r\n    CardActions,\r\n    Button,\r\n    CircularProgress,\r\n    Divider,\r\n    Container,\r\n    CardHeader,\r\n    CardContent,\r\n} from '@material-ui/core';\r\nimport CameraAltIcon from '@material-ui/icons/CameraAlt';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { useSnackbar } from 'notistack';\r\nimport AuthContext from '../utils/AuthContext';\r\nimport { SERVER } from \"../config\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    cardRoot: {\r\n        width: '100%',\r\n        maxWidth: 600,\r\n        overflow: 'auto',\r\n        margin: theme.spacing(2),\r\n        position: 'relative',\r\n        outline: 'none',\r\n    },\r\n    media: {\r\n        minHeight: 60,\r\n        maxHeight: 250,\r\n    },\r\n    image: {\r\n        maxHeight: 250,\r\n        maxWidth: '100%',\r\n    },\r\n    flexCenter: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n    },\r\n    progressbar: {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        marginTop: -12,\r\n        marginLeft: -12,\r\n    },\r\n    btnWrapper: {\r\n        position: 'relative',\r\n    },\r\n    input: {\r\n        display: 'none',\r\n    }\r\n}));\r\n\r\nvar image = null;\r\n\r\nexport default function NewAvatar() {\r\n    const classes = useStyles();\r\n    const { authDispatch } = React.useContext(AuthContext);\r\n    const [open, setOpen] = React.useState(false);\r\n    const [disableBtn, setDisableBtn] = React.useState({\r\n        submit: false,\r\n    });\r\n    const [values, setValues] = React.useState({\r\n        preview: '',\r\n    });\r\n    const { enqueueSnackbar } = useSnackbar();\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleCreatePost = (e) => {\r\n        e.preventDefault();\r\n        setDisableBtn({ submit: true });\r\n        if (image) {\r\n            const formData = new FormData();\r\n            formData.append('image', image);\r\n\r\n            fetch(`${SERVER}/users/update-avatar`, {\r\n                method: 'POST',\r\n                credentials: 'include',\r\n                body: formData,\r\n            })\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    if (data.success) {\r\n                        enqueueSnackbar('Avatar Updated!', { variant: \"success\" });\r\n                        setValues({ preview: '' })\r\n                        setOpen(false);\r\n                        authDispatch({\r\n                            type: \"REFUSER\"\r\n                        })\r\n                    } else {\r\n                        if (data.status === 401)\r\n                            authDispatch({\r\n                                type: \"LOGOUT\"\r\n                            })\r\n                        enqueueSnackbar(data.message, { variant: \"error\" });\r\n                        setValues({ preview: '' })\r\n                    }\r\n                    setDisableBtn({\r\n                        submit: false\r\n                    })\r\n                })\r\n                .catch((error) => {\r\n                    enqueueSnackbar('Avatar updation Failed', { variant: 'error' });\r\n                    setValues({ preview: '' })\r\n                    setDisableBtn({\r\n                        submit: false\r\n                    })\r\n                    console.error('Error:', error);\r\n                });\r\n        } else {\r\n            setDisableBtn({ submit: false });\r\n            enqueueSnackbar('You need to select an image', { variant: 'warning' });\r\n        }\r\n    }\r\n\r\n    const handleInputChange = () => (event) => {\r\n        image = event.target.files[0];\r\n        setValues({ ...values, preview: URL.createObjectURL(event.target.files[0]) });\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Tooltip title=\"Change avatar\">\r\n                <IconButton color=\"primary\" aria-label=\"add new post\" onClick={handleOpen} >\r\n                    <CameraAltIcon />\r\n                </IconButton>\r\n            </Tooltip>\r\n            <Modal\r\n                aria-labelledby=\"transition-modal-title\"\r\n                aria-describedby=\"transition-modal-description\"\r\n                className={classes.modal}\r\n                open={open}\r\n                onClose={handleClose}\r\n                closeAfterTransition\r\n                BackdropComponent={Backdrop}\r\n                BackdropProps={{\r\n                    timeout: 500,\r\n                }}\r\n            >\r\n                <Fade in={open}>\r\n                    <Card className={classes.cardRoot}>\r\n                        <form onSubmit={handleCreatePost}>\r\n                            <CardHeader\r\n                                action={\r\n                                    <Tooltip title=\"Close\">\r\n                                        <IconButton aria-label=\"Close Modal\" onClick={handleClose}>\r\n                                            <CloseIcon />\r\n                                        </IconButton>\r\n                                    </Tooltip>\r\n                                }\r\n                                title=\"Update Avatar\"\r\n                            />\r\n                            <CardActionArea className={classes.media}>\r\n                                <Container disableGutters className={classes.flexCenter}>\r\n                                    <input\r\n                                        accept=\"image/*\"\r\n                                        className={classes.input}\r\n                                        id=\"postImage\"\r\n                                        type=\"file\"\r\n                                        onChange={handleInputChange()} />\r\n\r\n                                    {values.preview\r\n                                        ? (\r\n                                            <img src={values.preview} alt=\"Post\" className={classes.image} />\r\n                                        )\r\n                                        : <label htmlFor=\"postImage\">\r\n                                            <Tooltip title=\"Select Avatar Image\" component=\"span\">\r\n                                                <Button variant=\"contained\" aria-label=\"select avatar image\" color='primary' startIcon={<CameraAltIcon />}>\r\n                                                    Select Avatar Image\r\n                                                </Button>\r\n                                            </Tooltip>\r\n                                        </label>\r\n                                    }\r\n                                </Container>\r\n                            </CardActionArea>\r\n                            <CardContent className={classes.flexCenter}>\r\n                                {values.preview && <label htmlFor=\"postImage\">\r\n                                    <Tooltip title=\"Select other image\" component=\"span\">\r\n                                        <Button variant=\"contained\" aria-label=\"select avatar image\" color='primary' startIcon={<CameraAltIcon />}>\r\n                                            Select other Image\r\n                                        </Button>\r\n                                    </Tooltip>\r\n                                </label>}\r\n                            </CardContent>\r\n                            <Divider />\r\n                            <CardActions>\r\n                                <div style={{ flexGrow: 1 }}>\r\n                                </div>\r\n                                <Button variant=\"contained\" disableElevation onClick={handleClose}>\r\n                                    Close\r\n                                    </Button>\r\n                                <div className={classes.btnWrapper}>\r\n                                    <Button variant=\"contained\" color=\"primary\" type='submit' disableElevation disabled={disableBtn.submit}>\r\n                                        Update Avatar\r\n                                    </Button>\r\n                                    {disableBtn.submit && <CircularProgress size={24} className={classes.progressbar}></CircularProgress>}\r\n                                </div>\r\n                            </CardActions>\r\n                        </form>\r\n                    </Card>\r\n                </Fade>\r\n            </Modal>\r\n        </React.Fragment>\r\n    );\r\n\r\n}\r\n\r\n","import React from 'react';\r\nimport {\r\n    Button,\r\n    CircularProgress\r\n} from '@material-ui/core';\r\nimport { SERVER } from '../config';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useSnackbar } from 'notistack';\r\nimport AuthContext from '../utils/AuthContext';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    progressbar: {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        marginTop: -12,\r\n        marginLeft: -12,\r\n    },\r\n    btnWrapper: {\r\n        position: 'relative',\r\n        marginRight: theme.spacing(1),\r\n    }\r\n}));\r\n\r\nfunction Follow(props) {\r\n    const classes = useStyles()\r\n    const [follow, setFollow] = React.useState(false)\r\n    const [disable, setDisable] = React.useState(false)\r\n    const { authDispatch } = React.useContext(AuthContext);\r\n\r\n    const { enqueueSnackbar } = useSnackbar();\r\n\r\n    const handleFollow = () => {\r\n        setDisable(true)\r\n        const data = { userId: props.userId };\r\n        fetch(`${SERVER}/users/follow?userId=${props.userId}`, {\r\n            method: 'POST',\r\n            credentials: 'include',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                if (data.success) {\r\n                    setFollow(!follow)\r\n                    authDispatch({\r\n                        type: 'REFUSER'\r\n                    })\r\n                    enqueueSnackbar(data.message, { variant: \"success\" });\r\n                } else {\r\n                    enqueueSnackbar(data.message, { variant: \"error\" });\r\n                }\r\n                setDisable(false);\r\n            })\r\n            .catch((error) => {\r\n                enqueueSnackbar(\"Request failed!\", { variant: \"error\" });\r\n                setDisable(false);\r\n                console.log(error);\r\n            });\r\n    }\r\n    React.useEffect(() => {\r\n        fetch(`${SERVER}/users/follow?userId=${props.userId}`, {\r\n            method: 'GET',\r\n            credentials: 'include'\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                if (data.success) {\r\n                    if (data.follow) {\r\n                        setFollow(true)\r\n                    } else {\r\n                        setFollow(false)\r\n                    }\r\n                } else {\r\n                    enqueueSnackbar(data.message, { variant: \"error\" });\r\n                    setFollow(false)\r\n                }\r\n            })\r\n            .catch((error) => {\r\n            });\r\n    }, [setFollow, props.userId, enqueueSnackbar]);\r\n    return (\r\n        <React.Fragment>\r\n            <div className={classes.btnWrapper}>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    disableElevation\r\n                    onClick={handleFollow}\r\n                    disabled={disable}>\r\n                    {follow ? \"Unfollow\" : \"Follow\"}\r\n                </Button>\r\n                {disable && <CircularProgress size={24} className={classes.progressbar}></CircularProgress>}\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default Follow\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport {\r\n    Typography,\r\n    Avatar,\r\n    Box,\r\n    List,\r\n    ListItem,\r\n    Button,\r\n    Divider,\r\n    Container,\r\n    Link\r\n} from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useParams, Link as RouterLink } from 'react-router-dom';\r\n// import UserContext from '../utils/UserContext';\r\nimport AuthContext from '../utils/AuthContext';\r\nimport { useSnackbar } from 'notistack';\r\nimport NewAvatar from '../components/NewAvatar';\r\nimport { SERVER } from '../config';\r\nimport Follow from '../components/Follow';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    box: {\r\n        [theme.breakpoints.up('md')]: {\r\n            margin: theme.spacing(2)\r\n        },\r\n    },\r\n    gutters: {\r\n        [theme.breakpoints.up('sm')]: {\r\n            paddingLeft: theme.spacing(3.5),\r\n        }\r\n    },\r\n    avatar: {\r\n        width: theme.spacing(25),\r\n        height: theme.spacing(25),\r\n\r\n    },\r\n    avatarBox: {\r\n        position: 'relative',\r\n        width: theme.spacing(25),\r\n        height: theme.spacing(25),\r\n    },\r\n    flex: {\r\n        display: 'flex',\r\n        // flexWrap: 'wrap',\r\n    },\r\n    mainFlex: {\r\n        flexDirection: 'column',\r\n        [theme.breakpoints.up('sm')]: {\r\n            flexDirection: 'row',\r\n        },\r\n    },\r\n    avatarWrapper: {\r\n        width: \"100%\",\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: theme.spacing(30),\r\n        },\r\n    },\r\n    mrLeft: {\r\n        marginLeft: theme.spacing(1)\r\n    },\r\n    mrRight: {\r\n        marginRight: theme.spacing(1)\r\n    },\r\n    justCenter: {\r\n        justifyContent: 'center',\r\n    }\r\n}));\r\n\r\nfunction User(props) {\r\n    const classes = useStyles();\r\n    const { authState, authDispatch } = React.useContext(AuthContext);\r\n    const { username } = useParams();\r\n    // const user = React.useContext(UserContext);\r\n    const [data, setData] = React.useState();\r\n    const { enqueueSnackbar } = useSnackbar();\r\n\r\n    React.useEffect(() => {\r\n        // if (user && username === user.login) {\r\n        //     setData(user);\r\n        // } else {\r\n        fetch(`${SERVER}/users/username/${username}`, {\r\n            method: 'GET',\r\n            credentials: 'include'\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                if (data.success) {\r\n                    setData(data)\r\n                } else {\r\n                    if (data.status === 401)\r\n                        authDispatch({\r\n                            type: \"LOGOUT\"\r\n                        })\r\n                    enqueueSnackbar(data.message, { variant: 'error' });\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                enqueueSnackbar('Failed to get user data', { variant: 'error' })\r\n            });\r\n        // }\r\n    }, [username, enqueueSnackbar, authState.refreshPost, authState.refreshUser, authDispatch]);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {data\r\n                ? (\r\n                    <React.Fragment>\r\n                        <Box className={classes.box}>\r\n                            <Container maxWidth=\"md\" disableGutters>\r\n                                <List className={clsx(classes.flex, classes.mainFlex)}>\r\n                                    <ListItem className={clsx(classes.avatarWrapper, classes.justCenter)}>\r\n                                        <Box className={classes.avatarBox}>\r\n                                            <Avatar\r\n                                                alt={`${data.login}'s avatar`}\r\n                                                src={data.avatar ? `${SERVER}${data.avatar}` : \"\"}\r\n                                                className={classes.avatar}\r\n                                            ></Avatar>\r\n                                            {authState.userId === data.userId && <Box position=\"absolute\" style={{ bottom: 0, right: 0 }}>\r\n                                                <NewAvatar />\r\n                                            </Box>}\r\n                                        </Box>\r\n                                    </ListItem>\r\n                                    <ListItem disableGutters className={classes.gutters}>\r\n                                        <List style={{ width: '100%' }}>\r\n                                            <ListItem disableGutters>\r\n                                                <Typography variant=\"h4\" style={{ flexGrow: 1 }}>{data.login}</Typography>\r\n                                                {authState.userId === data.userId && <Button variant=\"contained\" color=\"primary\" startIcon={<EditIcon />} component={RouterLink} to=\"/settings\" > edit</Button>}\r\n                                            </ListItem>\r\n                                            <ListItem dense disableGutters>\r\n                                                <Typography variant='body2'>{data.bio ? data.bio : \"\"}</Typography>\r\n                                            </ListItem>\r\n                                            <ListItem dense disableGutters>\r\n                                                <Typography variant='body1'>{data.location ? data.location : \"\"}</Typography>\r\n                                            </ListItem>\r\n                                            <ListItem dense disableGutters>\r\n                                                <Typography variant='body1'\r\n                                                    href={data.website ? data.website : \"\"}\r\n                                                    target=\"_blank\"\r\n                                                    component={Link}>{data.website ? \"Website Link\" : null}</Typography>\r\n                                            </ListItem>\r\n                                            <ListItem disableGutters>\r\n                                                {authState.userId !== data.userId && <Follow userId={data.userId} />}\r\n                                                <Button className={classes.mrRight} variant=\"contained\" disableElevation>Share Profile</Button>\r\n                                            </ListItem>\r\n                                            <ListItem dense disableGutters>\r\n                                                <List className={classes.flex} >\r\n                                                    <ListItem disableGutters>\r\n                                                        <Typography className={clsx(classes.mrRight)} variant='h6'>{data.posts}</Typography>\r\n                                                        <Typography variant='body1' className={classes.mrRight}>Posts</Typography>\r\n                                                    </ListItem>\r\n                                                    <Divider orientation=\"vertical\" flexItem />\r\n                                                    <ListItem disableGutters>\r\n                                                        <Typography className={clsx(classes.mrRight, classes.mrLeft)} variant='h6'>{data.followers}</Typography>\r\n                                                        <Typography variant='body1' className={classes.mrRight}>Followers</Typography>\r\n                                                    </ListItem>\r\n                                                    <Divider orientation=\"vertical\" flexItem />\r\n                                                    <ListItem disableGutters>\r\n                                                        <Typography className={clsx(classes.mrRight, classes.mrLeft)} variant='h6'>{data.following}</Typography>\r\n                                                        <Typography variant='body1'>Following</Typography>\r\n                                                    </ListItem>\r\n                                                </List>\r\n                                            </ListItem>\r\n                                        </List>\r\n                                    </ListItem>\r\n                                </List>\r\n\r\n                            </Container>\r\n                        </Box>\r\n                    </React.Fragment>\r\n                )\r\n                : <Typography>Loading...</Typography>}\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default User\r\n","import { Route, Redirect } from 'react-router-dom';\r\nimport React from \"react\";\r\nimport AuthContext from \"../utils/AuthContext\";\r\n\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n    const { authState } = React.useContext(AuthContext);\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={props => (\r\n                authState.isAuthenticated\r\n                    ?\r\n                    <Component {...props} />\r\n                    :\r\n                    <Redirect to={'/login'} />\r\n            )\r\n            }\r\n        />\r\n    )\r\n};\r\n\r\n\r\n\r\nexport default PrivateRoute;","import { Route, Redirect } from 'react-router-dom';\r\nimport React from \"react\";\r\nimport AuthContext from \"../utils/AuthContext\";\r\n\r\n\r\nconst PublicRoute = ({ component: Component, ...rest }) => {\r\n    const { authState } = React.useContext(AuthContext);\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={props => (\r\n                !authState.isAuthenticated\r\n                    ?\r\n                    <Component {...props} />\r\n                    :\r\n                    <Redirect to={'/'} />\r\n            )\r\n            }\r\n        />\r\n    )\r\n};\r\n\r\n\r\nexport default PublicRoute;","import React, { Component } from 'react'\r\nimport { Typography, Box, Button } from '@material-ui/core'\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n\r\n\r\nexport class NotFound extends Component {\r\n    render() {\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <Typography variant=\"h1\" color=\"initial\" align=\"center\">404</Typography>\r\n                <Typography variant=\"h4\" color=\"initial\" align=\"center\">Page Not Found!</Typography>\r\n                <Box mt={2} align=\"center\">\r\n                    <Button color=\"primary\" component={Link} to=\"/\">\r\n                        <ArrowBackIcon /> Go to home\r\n                    </Button>\r\n                </Box>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NotFound\r\n","import { Typography } from '@material-ui/core'\r\nimport React, { Component } from 'react'\r\n\r\nexport class ForgetPass extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Typography>Forget pass</Typography>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ForgetPass\r\n","import {\r\n    Button,\r\n    FormControl,\r\n    FormHelperText,\r\n    IconButton,\r\n    Input,\r\n    InputAdornment,\r\n    InputLabel,\r\n    CircularProgress\r\n} from '@material-ui/core'\r\nimport React from 'react'\r\n\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\r\n// import VpnKeyIcon from '@material-ui/icons/VpnKey';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { useSnackbar } from 'notistack';\r\nimport { validatePassword } from '../utils/validator'\r\nimport { SERVER } from '../config';\r\nimport clsx from 'clsx';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    margin: {\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    relative: {\r\n        position: 'relative',\r\n    },\r\n    progressbar: {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        marginTop: -12,\r\n        marginLeft: -12,\r\n    }\r\n}));\r\n\r\nexport default function ChangePasswordForm() {\r\n    const classes = useStyles();\r\n    const [values, setValues] = React.useState({\r\n        oldPassword: '',\r\n        password: '',\r\n        confirmPassword: '',\r\n        showPassword: false,\r\n        showOldPassword: false,\r\n    });\r\n\r\n    const [errors, setErrors] = React.useState({\r\n        password: false,\r\n        confirmPassword: false\r\n    });\r\n\r\n    const [disableBtn, setDisableBtn] = React.useState({\r\n        submit: false,\r\n    })\r\n\r\n    const { enqueueSnackbar } = useSnackbar();\r\n\r\n    const handleChange = (prop) => (event) => {\r\n        setValues({ ...values, [prop]: event.target.value });\r\n        if (prop === \"password\") {\r\n            setErrors({\r\n                password: !validatePassword(event.target.value)\r\n            })\r\n        } else if (prop === \"confirmPassword\") {\r\n            setErrors({\r\n                confirmPassword: event.target.value !== values.password ? true : false\r\n            })\r\n        }\r\n    };\r\n\r\n    const handleClickShowPassword = () => {\r\n        setValues({ ...values, showPassword: !values.showPassword });\r\n    };\r\n\r\n    const handleClickShowOldPassword = () => {\r\n        setValues({ ...values, showOldPassword: !values.showOldPassword });\r\n    };\r\n\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    const handleChangePass = (e) => {\r\n        e.preventDefault();\r\n        console.log(\"change pass submitted\")\r\n        if (!errors.password && !errors.confirmPassword && values.password && values.oldPassword) {\r\n            setDisableBtn({\r\n                submit: true\r\n            });\r\n            const data = {\r\n                oldPassword: values.oldPassword,\r\n                password: values.password,\r\n                confirmPassword: values.confirmPassword\r\n            };\r\n            fetch(`${SERVER}/auth/update-pass`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                credentials: 'include',\r\n                body: JSON.stringify(data),\r\n            })\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    if (data.success) {\r\n                        enqueueSnackbar('Password Changed successfully!', { variant: \"success\" });\r\n                        setValues({\r\n                            oldPassword: '',\r\n                            password: '',\r\n                            confirmPassword: '',\r\n                            showPassword: false,\r\n                            showOldPassword: false,\r\n                        });\r\n                    } else {\r\n                        enqueueSnackbar(data.message, { variant: \"error\" });\r\n                    }\r\n                    setDisableBtn({\r\n                        submit: false\r\n                    })\r\n                })\r\n                .catch((error) => {\r\n                    enqueueSnackbar('Password Change failed!', { variant: \"error\" });\r\n                    setDisableBtn({\r\n                        submit: false\r\n                    })\r\n                    console.error('Error:', error);\r\n                });\r\n        } else {\r\n            enqueueSnackbar('Current password or new password should be valid.', { variant: \"warning\" });\r\n        }\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            <form onSubmit={handleChangePass}>\r\n                <FormControl fullWidth className={classes.margin}>\r\n                    <InputLabel htmlFor=\"userCurrentPassword\">Current Password</InputLabel>\r\n                    <Input\r\n                        id=\"userCurrentPassword\"\r\n                        type={values.showOldPassword ? 'text' : 'password'}\r\n                        value={values.oldPassword}\r\n                        onChange={handleChange('oldPassword')}\r\n                        /*startAdornment={\r\n                            <InputAdornment position=\"start\" >\r\n                                <VpnKeyIcon />\r\n                            </InputAdornment>\r\n                        }*/\r\n                        endAdornment={\r\n                            <InputAdornment position=\"end\" >\r\n                                <IconButton\r\n                                    aria-label=\"toggle confirm password visibility\"\r\n                                    onClick={handleClickShowOldPassword}\r\n                                    onMouseDown={handleMouseDownPassword}\r\n                                >\r\n                                    {values.showOldPassword ? <VisibilityIcon /> : <VisibilityOffIcon />}\r\n                                </IconButton>\r\n                            </InputAdornment>\r\n                        }\r\n                    />\r\n                </FormControl>\r\n                <FormControl fullWidth className={classes.margin} error={errors.password}>\r\n                    <InputLabel htmlFor=\"userPassword\">New Password</InputLabel>\r\n                    <Input\r\n                        id=\"userPassword\"\r\n                        type={values.showPassword ? 'text' : 'password'}\r\n                        value={values.password}\r\n                        onChange={handleChange('password')}\r\n                        /*startAdornment={\r\n                            <InputAdornment position=\"start\" >\r\n                                <VpnKeyIcon />\r\n                            </InputAdornment>\r\n                        }*/\r\n                        endAdornment={\r\n                            <InputAdornment position=\"end\" >\r\n                                <IconButton\r\n                                    aria-label=\"toggle password visibility\"\r\n                                    onClick={handleClickShowPassword}\r\n                                    onMouseDown={handleMouseDownPassword}\r\n                                >\r\n                                    {values.showPassword ? <VisibilityIcon /> : <VisibilityOffIcon />}\r\n                                </IconButton>\r\n                            </InputAdornment>\r\n                        }\r\n                    />\r\n                    <FormHelperText>Use 8 or more characters with a mix of letters, numbers & symbols</FormHelperText>\r\n                </FormControl>\r\n                <FormControl fullWidth className={classes.margin} error={errors.confirmPassword}>\r\n                    <InputLabel htmlFor=\"userConfirmPassword\">Confirm Password</InputLabel>\r\n                    <Input\r\n                        id=\"userConfirmPassword\"\r\n                        type={values.showPassword ? 'text' : 'password'}\r\n                        value={values.confirmPassword}\r\n                        onChange={handleChange('confirmPassword')}\r\n                    /*startAdornment={\r\n                        <InputAdornment position=\"start\" >\r\n                            <VpnKeyIcon />\r\n                        </InputAdornment>\r\n                    }*/\r\n                    />\r\n                </FormControl>\r\n                <FormControl className={clsx(classes.margin, classes.relative)} >\r\n                    <Button variant=\"contained\" color=\"primary\" type='submit' disabled={disableBtn.submit}>Change Password</Button>\r\n                    {disableBtn.submit && <CircularProgress size={24} className={classes.progressbar}></CircularProgress>}\r\n                </FormControl>\r\n            </form>\r\n        </React.Fragment>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport UserContext from '../utils/UserContext';\r\nimport {\r\n    Button,\r\n    FormControl,\r\n    CircularProgress,\r\n    Input,\r\n    InputLabel,\r\n    TextField\r\n} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport { SERVER } from '../config';\r\nimport AuthContext from '../utils/AuthContext';\r\nimport { useSnackbar } from 'notistack';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    submit: {\r\n        position: 'relative'\r\n    },\r\n    progressbar: {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        marginTop: -12,\r\n        marginLeft: -12,\r\n    },\r\n    margin: {\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    form: {\r\n        marginBottom: theme.spacing(4)\r\n    }\r\n}));\r\n\r\nexport default function EditProfile() {\r\n    const classes = useStyles();\r\n    const user = React.useContext(UserContext);\r\n    const { authDispatch } = React.useContext(AuthContext);\r\n    const [values, setValues] = React.useState({\r\n        name: '',\r\n        email: '',\r\n        bio: '',\r\n        website: '',\r\n        location: '',\r\n    });\r\n    const [disable, setDisable] = React.useState(false);\r\n    const { enqueueSnackbar } = useSnackbar();\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setDisable(true);\r\n        const data = {\r\n            \"email\": values.email,\r\n            \"name\": values.name,\r\n            \"bio\": values.bio,\r\n            \"location\": values.location,\r\n            \"website\": values.website\r\n        };\r\n        fetch(`${SERVER}/users/update-profile`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            credentials: 'include',\r\n            body: JSON.stringify(data),\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                if (data.success) {\r\n                    enqueueSnackbar('Profile updated!', { variant: \"success\" })\r\n                    authDispatch({\r\n                        type: 'REFUSER'\r\n                    })\r\n                } else {\r\n                    if (data.status === 401)\r\n                        authDispatch({\r\n                            type: \"LOGOUT\"\r\n                        })\r\n                    enqueueSnackbar(data.message, { variant: \"error\" });\r\n                }\r\n                setDisable(false)\r\n            })\r\n            .catch((error) => {\r\n                enqueueSnackbar('Profile updation Failed', { variant: 'error' });\r\n                setDisable(false)\r\n                console.error('Error:', error);\r\n            });\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        if (user) {\r\n            setValues({\r\n                name: user.name,\r\n                email: user.email,\r\n                bio: user.bio,\r\n                website: user.website,\r\n                location: user.location,\r\n            })\r\n        }\r\n    }, [user])\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <form onSubmit={handleSubmit} className={classes.form}>\r\n                <FormControl fullWidth className={classes.margin}>\r\n                    <InputLabel htmlFor=\"userName\">Name</InputLabel>\r\n                    <Input\r\n                        type=\"text\"\r\n                        id=\"userName\"\r\n                        value={values.name}\r\n                        onChange={e => setValues({ ...values, name: e.target.value })}\r\n                    />\r\n                </FormControl>\r\n                <FormControl fullWidth className={classes.margin}>\r\n                    <InputLabel htmlFor=\"userEmail\">Email</InputLabel>\r\n                    <Input\r\n                        type=\"email\"\r\n                        id=\"userEmail\"\r\n                        value={values.email}\r\n                        onChange={e => setValues({ ...values, email: e.target.value })}\r\n                    />\r\n                </FormControl>\r\n                <FormControl fullWidth className={classes.margin}>\r\n                    <TextField\r\n                        fullWidth\r\n                        id=\"userBio\"\r\n                        rows={3}\r\n                        label=\"Write something about you\"\r\n                        value={values.bio}\r\n                        multiline\r\n                        maxLength=\"200\"\r\n                        onChange={e => setValues({ ...values, bio: e.target.value })}\r\n                    />\r\n                </FormControl>\r\n                <FormControl fullWidth className={classes.margin}>\r\n                    <InputLabel htmlFor=\"userLocation\">Location</InputLabel>\r\n                    <Input\r\n                        type=\"text\"\r\n                        id=\"userLocation\"\r\n                        value={values.location}\r\n                        onChange={e => setValues({ ...values, location: e.target.value })}\r\n                    />\r\n                </FormControl>\r\n                <FormControl fullWidth className={classes.margin}>\r\n                    <InputLabel htmlFor=\"userWebsite\">Website</InputLabel>\r\n                    <Input\r\n                        type=\"url\"\r\n                        id=\"userWebsite\"\r\n                        value={values.website}\r\n                        onChange={e => setValues({ ...values, website: e.target.value })}\r\n                    />\r\n                </FormControl>\r\n\r\n                <FormControl className={clsx(classes.submit, classes.margin)}>\r\n                    <Button variant=\"contained\" color=\"primary\" type=\"submit\" disabled={disable}>\r\n                        Update Profile\r\n                    </Button>\r\n                    {disable && <CircularProgress size={24} className={classes.progressbar}>\r\n                    </CircularProgress>}\r\n                </FormControl>\r\n            </form>\r\n        </React.Fragment>\r\n    )\r\n}\r\n","import {\r\n    Typography,\r\n    Tabs,\r\n    Tab,\r\n    Divider,\r\n    Box,\r\n    Container,\r\n} from '@material-ui/core'\r\nimport React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ChangePasswordForm from '../components/ChangePasswordForm';\r\nimport EditProfile from '../components/EditProfile';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        [theme.breakpoints.up('sm')]: {\r\n            margin: theme.spacing(2),\r\n        }\r\n    },\r\n    mrBottom: {\r\n        marginBottom: theme.spacing(3),\r\n    },\r\n    mrTop: {\r\n        marginTop: theme.spacing(3),\r\n    }\r\n}));\r\n\r\nexport default function Settings() {\r\n\r\n    const classes = useStyles();\r\n    const [index, setIndex] = React.useState(0);\r\n\r\n    const handleChangeIndex = (event, index) => {\r\n        setIndex(index);\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Box className={classes.root}>\r\n                <Typography variant=\"h4\" className={classes.mrBottom}>Account Settings</Typography>\r\n                <Tabs\r\n                    value={index}\r\n                    onChange={handleChangeIndex}\r\n                    indicatorColor=\"primary\"\r\n                    textColor=\"primary\"\r\n                    style={{ overflow: \"auto\" }}\r\n                >\r\n                    <Tab label=\"Profile\" />\r\n                    <Tab label=\"Password\" />\r\n                    {/*<Tab label=\"Account\" />*/}\r\n                </Tabs>\r\n                <Divider />\r\n\r\n                {(index === 0) && (<Box index={0} className={classes.mrTop} style={{ display: 'flex' }}>\r\n                    <Container maxWidth=\"xs\" disableGutters>\r\n                        <EditProfile />\r\n                    </Container>\r\n                    <div style={{ flexGrow: 1 }}></div>\r\n                </Box>)}\r\n                {(index === 1) && (<Box index={1} style={{ display: 'flex' }}>\r\n                    <Container maxWidth=\"xs\" disableGutters>\r\n                        <ChangePasswordForm />\r\n                    </Container>\r\n                    <div style={{ flexGrow: 1 }}></div>\r\n                </Box>)}\r\n                {/* {(index === 2) && (<Box index={2} className={classes.mrTop}>\r\n                    Account Settings will come soon...\r\n               </Box>)}*/}\r\n            </Box>\r\n        </React.Fragment>\r\n    )\r\n\r\n}\r\n\r\n","import React from 'react'\r\nimport {\r\n    Container,\r\n    Box,\r\n    Typography,\r\n} from '@material-ui/core'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n// import { useSnackbar } from 'notistack';\r\nimport AuthContext from '../utils/AuthContext';\r\nimport GetPosts from '../components/GetPosts';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        [theme.breakpoints.up('sm')]: {\r\n            margin: theme.spacing(2),\r\n        }\r\n    },\r\n    marginBottom: {\r\n        marginBottom: theme.spacing(3),\r\n    },\r\n}));\r\n\r\nfunction Feed() {\r\n    const { authState } = React.useContext(AuthContext);\r\n    const classes = useStyles();\r\n\r\n    // const { enqueueSnackbar } = useSnackbar();\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Box className={classes.root}>\r\n                <Container maxWidth=\"sm\" disableGutters>\r\n                    <Typography variant=\"h4\" className={classes.marginBottom}>Feed</Typography>\r\n                    <GetPosts authState={authState} url=\"/posts/feed/\" />\r\n                </Container>\r\n                {/*<div style={{ flexGrow: 1 }}></div>*/}\r\n            </Box>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Feed;\r\n","import React from 'react'\r\nimport {\r\n    Container,\r\n    Box,\r\n    Typography,\r\n} from '@material-ui/core'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n// import { useSnackbar } from 'notistack';\r\nimport AuthContext from '../utils/AuthContext';\r\nimport GetPosts from '../components/GetPosts';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        [theme.breakpoints.up('sm')]: {\r\n            margin: theme.spacing(2),\r\n        }\r\n    },\r\n    marginBottom: {\r\n        marginBottom: theme.spacing(3),\r\n    },\r\n}));\r\n\r\nfunction Tranding() {\r\n    const { authState } = React.useContext(AuthContext);\r\n    const classes = useStyles();\r\n\r\n    // const { enqueueSnackbar } = useSnackbar();\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Box className={classes.root}>\r\n                <Container maxWidth=\"sm\" disableGutters>\r\n                    <Typography variant=\"h4\" className={classes.marginBottom}>Trending</Typography>\r\n                    <GetPosts authState={authState} url='/posts/trending/' />\r\n                </Container>\r\n                {/*<div style={{ flexGrow: 1 }}></div>*/}\r\n            </Box>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Tranding;","import React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport PostCard from '../components/PostCard';\r\nimport { SERVER } from '../config';\r\nimport { useSnackbar } from 'notistack';\r\nimport { Typography } from '@material-ui/core'\r\n\r\nfunction PostById() {\r\n\tconst { postId } = useParams();\r\n\tconst [post, setPost] = React.useState();\r\n\tconst [value, setValue] = React.useState(\"Loading...\");\r\n\r\n\tconst { enqueueSnackbar } = useSnackbar();\r\n\r\n\tReact.useEffect(() => {\r\n\t\tfetch(`${SERVER}/posts/byid?postId=${postId}`, {\r\n\t\t\tmethod: 'GET',\r\n\t\t\tcredentials: 'include',\r\n\t\t})\r\n\t\t\t.then(response => response.json())\r\n\t\t\t.then(res => {\r\n\t\t\t\tif (res.success) {\r\n\t\t\t\t\tsetPost(res.post);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsetPost();\r\n\t\t\t\t\tsetValue(\"Request post is either deleted or post id is wrong\");\r\n\t\t\t\t\tenqueueSnackbar(res.message, { variant: \"error\" });\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((error) => {\r\n\t\t\t\tsetPost();\r\n\t\t\t\tsetValue(\"Failed to get post\");\r\n\t\t\t\tenqueueSnackbar('Failed to get post', { variant: \"error\" });\r\n\t\t\t\tconsole.error('Error:', error);\r\n\t\t\t});\r\n\t}, [postId, enqueueSnackbar])\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{post ? (<PostCard post={post} notSkeleton={true} single={true} />)\r\n\t\t\t\t: <Typography variant=\"subtitle1\" color=\"inherit\">{value}</Typography>}\r\n\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default PostById;\r\n","import React from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom';\r\n\r\nfunction Redirect() {\r\n\tconst { path } = useParams();\r\n\tconst history = useHistory();\r\n\tReact.useEffect(() => {\r\n\t\thistory.push(`/${path}`)\r\n\t})\r\n\treturn (\r\n\t\t<>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default Redirect\r\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport ScrollToTop from './components/ScrollToTop';\nimport Navigation from \"./components/navigation\";\nimport Home from './pages/Home';\nimport Login from \"./pages/Login\"\nimport Register from './pages/Register';\nimport User from './pages/User';\nimport PrivateRoute from \"./utils/PrivateRoute\";\nimport PublicRoute from \"./utils/PublicRoute\"\nimport NotFound from \"./pages/NotFound\";\nimport ForgetPass from './pages/ForgetPass';\nimport AuthContext from \"./utils/AuthContext\";\nimport Settings from './pages/Settings';\nimport Feed from './pages/Feed';\nimport Trending from './pages/Trending';\nimport PostById from './pages/PostById';\nimport { SnackbarProvider } from 'notistack';\nimport Redirect from './pages/Redirect';\n// import { createBrowserHistory } from 'history';\n\n// const history = createBrowserHistory({ basename: '/socialmedia_frontend' });\n\nconst authReducer = (authState, action) => {\n  switch (action.type) {\n    case \"LOGIN\":\n      return {\n        ...authState,\n        isAuthenticated: true,\n        userId: action.payload.userId,\n        username: action.payload.username\n      };\n    case \"LOGOUT\":\n      return {\n        ...authState,\n        isAuthenticated: false,\n        userId: null,\n        username: null\n      };\n    case \"REFPOST\":\n      return {\n        ...authState,\n        refreshPost: !authState.refreshPost\n      };\n    case \"REFUSER\":\n      return {\n        ...authState,\n        refreshUser: !authState.refreshUser\n      };\n    default:\n      return authState;\n  }\n};\n\n\nfunction App(props) {\n  const initialState = props.initialState;\n  const [authState, authDispatch] = React.useReducer(authReducer, initialState);\n\n  return (\n    <React.Fragment>\n      {/*<Router basename=\"/socialmedia_frontend\" history={history}>*/}\n      <Router>\n        <SnackbarProvider\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'right',\n          }}\n          maxSnack={2}\n        >\n          <AuthContext.Provider value={{ authState, authDispatch }}>\n            <Navigation>\n              <Switch>\n                <PrivateRoute exact path=\"/\" component={Home} />\n                <PublicRoute exact path=\"/login\" component={Login} />\n                <PublicRoute exact path=\"/forgetpass\" component={ForgetPass} />\n                <PublicRoute exact path=\"/register\" component={Register} />\n                <PrivateRoute exact path=\"/settings\" component={Settings} />\n                <PrivateRoute exact path=\"/feed\" component={Feed} />\n                <PrivateRoute exact path=\"/trending\" component={Trending} />\n                <PrivateRoute exact path=\"/posts/:postId\" component={PostById} />\n                <PrivateRoute exact path=\"/users/:username\" component={User} />\n                <Route exect path=\"/redirect/:path\" component={Redirect} />\n                <Route component={NotFound} />\n              </Switch>\n            </Navigation>\n          </AuthContext.Provider>\n          <ScrollToTop />\n        </SnackbarProvider>\n      </Router>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import React, { Component } from 'react'\r\nimport App from '../App';\r\nimport { SERVER } from '../config'\r\n\r\n\r\nexport class CheckAuthWrapper extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            initialState: null\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(`${SERVER}/auth/`, {\r\n            method: 'GET',\r\n            credentials: 'include'\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                if (data.success) {\r\n                    this.setState({\r\n                        initialState: {\r\n                            isAuthenticated: true,\r\n                            userId: data.userId,\r\n                            username: data.username,\r\n                            refreshPost: false,\r\n                            refreshUser: false,\r\n                        }\r\n                    })\r\n                } else {\r\n                    this.setState({\r\n                        initialState: {\r\n                            isAuthenticated: false,\r\n                            userId: null,\r\n                            username: null,\r\n                            refreshPost: false,\r\n                            refreshUser: false,\r\n                        }\r\n                    });\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                this.setState({\r\n                    initialState: {\r\n                        isAuthenticated: false,\r\n                        userId: null,\r\n                        username: null,\r\n                        refreshUser: false,\r\n                        refreshPost: false,\r\n                    }\r\n                });\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            this.state.initialState ? (\r\n                <App initialState={this.state.initialState} />\r\n            ) : <p>Loading...</p>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CheckAuthWrapper\r\n\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import App from './App';\nimport CheckAuthWrapper from './components/CheckAuthWrapper'\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n\n  <CheckAuthWrapper />\n  , document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n","const emailRegExp = new RegExp(/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/);\r\nconst passRegExp = new RegExp(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,16}$/);\r\nconst usernameRegExp = new RegExp(/^(?=.{4,20}$)[a-zA-Z0-9]*$/);\r\nconst postTextRegExp = new RegExp(/^.{10,255}$/);\r\n\r\nconst validateEmail = (email) => {\r\n    return emailRegExp.test(email);\r\n}\r\nconst validatePassword = (password) => {\r\n    return passRegExp.test(password);\r\n}\r\n\r\nconst validateUsername = (username) => {\r\n    return usernameRegExp.test(username);\r\n}\r\n\r\nconst validatePostText = (postText) => {\r\n    return postTextRegExp.test(postText);\r\n}\r\n\r\nmodule.exports = {\r\n    validateEmail,\r\n    validatePassword,\r\n    validateUsername,\r\n    validatePostText\r\n}"],"sourceRoot":""}