{"version":3,"sources":["components/ScrollToTop.js","components/NewPost.js","components/Notification.js","components/navigation.js","utils/PrivateRoute.js","utils/PublicRoute.js","components/Loader.js","App.js","components/CheckAuthWrapper.js","serviceWorkerRegistration.js","index.js","config.js","utils/AuthContext.js","utils/validator.js","utils/UserContext.js","utils/FormatDate.js"],"names":["ScrollToTop","pathname","useLocation","useEffect","window","scrollTo","useStyles","makeStyles","theme","modal","display","alignItems","justifyContent","cardRoot","width","maxWidth","overflow","margin","spacing","position","outline","media","minHeight","maxHeight","image","imageWrapper","closeBtn","right","top","progressbar","left","marginTop","marginLeft","btnWrapper","input","NewPost","history","useHistory","classes","authDispatch","React","useContext","AuthContext","useState","open","setOpen","submit","disableBtn","setDisableBtn","preview","postText","values","setValues","errors","setErrors","enqueueSnackbar","useSnackbar","handleClose","handleInputChange","prop","event","target","files","URL","createObjectURL","value","validatePostText","Fragment","Tooltip","title","IconButton","color","aria-label","onClick","Modal","aria-labelledby","aria-describedby","className","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","Card","onSubmit","e","preventDefault","formData","FormData","append","fetch","SERVER","method","credentials","body","then","response","json","data","success","variant","type","push","post","_id","status","message","catch","error","console","CardActionArea","Container","disableGutters","src","alt","CardContent","TextField","fullWidth","id","label","multiline","rows","onChange","CardActions","style","flexGrow","accept","htmlFor","component","Button","disableElevation","disabled","CircularProgress","size","Notification","anchorEl","setAnchorEl","notifications","setNotifications","handleMenuClose","renderNotifications","Menu","anchorOrigin","vertical","horizontal","transformOrigin","Boolean","length","map","notification","MenuItem","RouterLink","to","postId","formateDate","createdAt","keepMounted","minWidth","currentTarget","res","root","drawer","breakpoints","up","flexShrink","appBar","zIndex","menuButton","marginRight","toolbar","mixins","drawerPaper","content","paddingTop","grow","mrLeft","textDecoration","justCenter","avatar","height","Navigation","props","useTheme","mobileOpen","setMobileOpen","authState","user","setUser","location","container","undefined","document","localStorage","getItem","myTheme","setTheme","appliedTheme","createMuiTheme","palette","primary","main","zhCN","icon","handleDrawerToggle","handleDrawerHide","isAuthenticated","username","refreshUser","handleLogout","ListItem","Divider","Hidden","smDown","implementation","List","userInfo","login","area-label","padding","Avatar","dense","Typography","disablePadding","flexDirection","posts","followers","following","name","index","item","button","selected","ListItemIcon","ListItemText","renderMenu","ThemeProvider","CssBaseline","AppBar","Toolbar","edge","noWrap","setItem","aria-controls","aria-haspopup","Link","mdUp","Drawer","anchor","direction","paper","ModalProps","UserContext","Provider","children","PrivateRoute","Component","rest","render","PublicRoute","Loader","class","Home","lazy","Login","Register","User","Settings","Trending","Feed","NotFound","PostById","ResetPass","ForgetPass","authReducer","action","userId","payload","refreshPost","App","initialState","useReducer","maxSnack","fallback","exact","path","CheckAuthWrapper","state","setState","this","isLocalhost","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","onUpdate","onSuccess","ReactDOM","getElementById","process","href","origin","addEventListener","headers","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration","module","exports","createContext","emailRegExp","RegExp","passRegExp","usernameRegExp","postTextRegExp","validateEmail","email","test","validatePassword","password","validateUsername","date","nowDate","Date","now","rft","Intl","RelativeTimeFormat","numeric","SECOND","MINUTE","HOUR","DAY","WEEK","MONTH","YEAR","intervals","ge","divisor","unit","text","getTime","diff","diffAbs","Math","abs","interval","x","round","isFuture","format"],"mappings":"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","file":"static/js/main.c056dd68.chunk.js","sourcesContent":["import { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport default function ScrollToTop() {\r\n    const { pathname } = useLocation();\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n    }, [pathname]);\r\n\r\n    return null;\r\n}","import React from 'react'\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport {\r\n    Tooltip,\r\n    IconButton,\r\n    Modal,\r\n    Fade,\r\n    Backdrop,\r\n    Card,\r\n    CardActionArea,\r\n    // CardMedia,\r\n    CardContent,\r\n    CardActions,\r\n    Button,\r\n    CircularProgress,\r\n    TextField,\r\n    // Divider,\r\n    Container,\r\n} from '@material-ui/core';\r\nimport { useHistory } from 'react-router-dom'\r\nimport CameraAltIcon from '@material-ui/icons/CameraAlt';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { useSnackbar } from 'notistack'\r\nimport { validatePostText } from \"../utils/validator\";\r\nimport AuthContext from '../utils/AuthContext';\r\nimport { SERVER } from '../config'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    cardRoot: {\r\n        width: '100%',\r\n        maxWidth: 600,\r\n        overflow: 'auto',\r\n        margin: theme.spacing(2),\r\n        position: 'relative',\r\n        outline: 'none',\r\n    },\r\n    media: {\r\n        minHeight: 60,\r\n        maxHeight: 250,\r\n    },\r\n    image: {\r\n        maxHeight: 250,\r\n        maxWidth: '100%',\r\n    },\r\n    imageWrapper: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n    },\r\n    closeBtn: {\r\n        position: 'absolute',\r\n        right: theme.spacing(.5),\r\n        top: theme.spacing(.5),\r\n    },\r\n    progressbar: {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        marginTop: -12,\r\n        marginLeft: -12,\r\n    },\r\n    btnWrapper: {\r\n        position: 'relative',\r\n    },\r\n    input: {\r\n        display: 'none',\r\n    }\r\n}));\r\n\r\nvar image = null;\r\n\r\nexport default function NewPost() {\r\n    const history = useHistory();\r\n    const classes = useStyles();\r\n    const { authDispatch } = React.useContext(AuthContext);\r\n    const [open, setOpen] = React.useState(false);\r\n    const [disableBtn, setDisableBtn] = React.useState({\r\n        submit: false,\r\n    });\r\n    const [values, setValues] = React.useState({\r\n        preview: '',\r\n        postText: '',\r\n    });\r\n\r\n    const [errors, setErrors] = React.useState({\r\n        postText: false\r\n    })\r\n    const { enqueueSnackbar } = useSnackbar();\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleCreatePost = (e) => {\r\n        e.preventDefault();\r\n        setDisableBtn({ submit: true });\r\n        if (validatePostText(values.postText)) {\r\n            const formData = new FormData();\r\n            if (image)\r\n                formData.append('image', image);\r\n\r\n            formData.append('postText', values.postText);\r\n            fetch(`${SERVER}/posts/create`, {\r\n                method: 'POST',\r\n                credentials: 'include',\r\n                body: formData,\r\n            })\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    if (data.success) {\r\n                        enqueueSnackbar('Post Created!', { variant: \"success\" });\r\n                        setValues({ image: '', postText: '' });\r\n                        setOpen(false);\r\n                        authDispatch({\r\n                            type: 'REFPOST'\r\n                        })\r\n                        history.push(`/posts/${data.post._id}`);\r\n                    } else {\r\n                        if (data.status === 401)\r\n                            authDispatch({\r\n                                type: \"LOGOUT\"\r\n                            })\r\n                        enqueueSnackbar(data.message, { variant: \"error\" });\r\n                    }\r\n                    setDisableBtn({\r\n                        submit: false\r\n                    })\r\n                })\r\n                .catch((error) => {\r\n                    enqueueSnackbar('Post Creation Failed', { variant: 'error' });\r\n                    setDisableBtn({\r\n                        submit: false\r\n                    })\r\n                    console.error('Error:', error);\r\n                });\r\n        } else {\r\n            setDisableBtn({ submit: false });\r\n            enqueueSnackbar('Post text must be 10-255 characters long', { variant: 'warning' });\r\n        }\r\n    }\r\n\r\n    const handleInputChange = (prop) => (event) => {\r\n        if (prop === 'image') {\r\n            image = event.target.files[0];\r\n            setValues({ ...values, preview: URL.createObjectURL(event.target.files[0]) });\r\n        } else {\r\n            setValues({ ...values, [prop]: event.target.value });\r\n            setErrors({ postText: !validatePostText(event.target.value) })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Tooltip title=\"New Post\">\r\n                <IconButton color=\"inherit\" aria-label=\"add new post\" onClick={handleOpen} >\r\n                    <AddIcon />\r\n                </IconButton>\r\n            </Tooltip>\r\n            <Modal\r\n                aria-labelledby=\"transition-modal-title\"\r\n                aria-describedby=\"transition-modal-description\"\r\n                className={classes.modal}\r\n                open={open}\r\n                onClose={handleClose}\r\n                closeAfterTransition\r\n                BackdropComponent={Backdrop}\r\n                BackdropProps={{\r\n                    timeout: 500,\r\n                }}\r\n            >\r\n                <Fade in={open}>\r\n                    <Card className={classes.cardRoot}>\r\n                        <form onSubmit={handleCreatePost}>\r\n                            <CardActionArea className={classes.media}>\r\n                                <Container disableGutters className={classes.imageWrapper}>\r\n                                    {/*<CardMedia\r\n                                    className={classes.media}\r\n                                    image='${SERVER}/images/profile/profile-ankit.jpg'\r\n                                    title=\"Contemplative Reptile\"\r\n                                />*/}\r\n                                    <div></div>{/*this is because a container must hava a child */}\r\n                                    {values.preview && <img src={values.preview} alt=\"Post\" className={classes.image} />}\r\n                                </Container>\r\n                            </CardActionArea>\r\n                            <CardContent>\r\n                                <TextField\r\n                                    fullWidth\r\n                                    id=\"postText\"\r\n                                    label=\"Whats Happening?\"\r\n                                    multiline\r\n                                    rows={4}\r\n                                    value={values.postText}\r\n                                    onChange={handleInputChange('postText')}\r\n                                    error={errors.postText}\r\n                                />\r\n                            </CardContent>\r\n                            {/*<Divider />*/}\r\n                            <CardActions>\r\n                                <div style={{ flexGrow: 1 }}>\r\n                                    <input\r\n                                        accept=\"image/*\"\r\n                                        className={classes.input}\r\n                                        id=\"postImage\"\r\n                                        type=\"file\"\r\n                                        onChange={handleInputChange('image')} />\r\n                                    <label htmlFor=\"postImage\">\r\n                                        <Tooltip title=\"Add post image\" component=\"span\">\r\n                                            <IconButton aria-label=\"Add post image\" color='primary'>\r\n                                                <CameraAltIcon />\r\n                                            </IconButton>\r\n                                        </Tooltip>\r\n                                    </label>\r\n                                </div>\r\n                                <Button variant=\"contained\" disableElevation onClick={handleClose}>\r\n                                    Close\r\n                                </Button>\r\n                                <div className={classes.btnWrapper}>\r\n                                    <Button variant=\"contained\" color=\"primary\" type='submit' disableElevation disabled={disableBtn.submit}>\r\n                                        Create Post\r\n                                    </Button>\r\n                                    {disableBtn.submit && <CircularProgress size={24} className={classes.progressbar}></CircularProgress>}\r\n                                </div>\r\n                            </CardActions>\r\n                        </form>\r\n                        <CardActions className={classes.closeBtn}>\r\n                            <Tooltip title=\"Close\">\r\n                                <IconButton aria-label=\"Close Modal\" onClick={handleClose}>\r\n                                    <CloseIcon />\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                        </CardActions>\r\n                    </Card>\r\n                </Fade>\r\n            </Modal>\r\n        </React.Fragment>\r\n    );\r\n\r\n}\r\n\r\n","import React from 'react';\r\nimport NotificationsNoneIcon from '@material-ui/icons/NotificationsNone';\r\nimport {\r\n\tTooltip,\r\n\tIconButton,\r\n\tMenu,\r\n\tMenuItem,\r\n\tCircularProgress\r\n} from '@material-ui/core';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport { useSnackbar } from 'notistack';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { SERVER } from '../config';\r\nimport formateDate from '../utils/FormatDate';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tprogressbar: {\r\n\t\tposition: 'absolute',\r\n\t\ttop: '50%',\r\n\t\tleft: '50%',\r\n\t\tmarginTop: -15,\r\n\t\tmarginLeft: -15,\r\n\t},\r\n}));\r\n\r\nfunction Notification() {\r\n\tconst classes = useStyles();\r\n\tconst [anchorEl, setAnchorEl] = React.useState(null);\r\n\tconst [notifications, setNotifications] = React.useState();\r\n\tconst { enqueueSnackbar } = useSnackbar();\r\n\r\n\tconst getNotifications = () => {\r\n\t\tfetch(`${SERVER}/users/notifications`, {\r\n\t\t\tmethod: 'GET',\r\n\t\t\tcredentials: 'include',\r\n\t\t})\r\n\t\t\t.then(response => response.json())\r\n\t\t\t.then(res => {\r\n\t\t\t\tif (res.success) {\r\n\t\t\t\t\tsetNotifications(res.notifications);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tenqueueSnackbar(res.message, { variant: \"error\" });\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((error) => {\r\n\t\t\t\tenqueueSnackbar('Failed to get notifications', { variant: \"error\" });\r\n\t\t\t\tconsole.error('Error:', error);\r\n\t\t\t});\r\n\t}\r\n\r\n\tconst handleMenuOpen = (event) => {\r\n\t\tsetAnchorEl(event.currentTarget);\r\n\t\tgetNotifications()\r\n\t};\r\n\tconst handleMenuClose = () => {\r\n\t\tsetAnchorEl(null);\r\n\t};\r\n\r\n\tconst renderNotifications = (\r\n\t\tnotifications ? <Menu\r\n\t\t\tanchorEl={anchorEl}\r\n\t\t\tanchorOrigin={{ vertical: \"top\", horizontal: 'left' }}\r\n\t\t\tid=\"account-menu\"\r\n\t\t\ttransformOrigin={{ vertical: 'bottom', horizontal: 'right' }}\r\n\t\t\topen={Boolean(anchorEl)}\r\n\t\t\tonClose={handleMenuClose}\r\n\t\t>\r\n\t\t\t{/*<MenuItem>Hi {authState.username}!</MenuItem>*/}\r\n\t\t\t{notifications.length > 0 ? notifications.map((notification) => {\r\n\t\t\t\treturn (<MenuItem\r\n\t\t\t\t\tonClick={handleMenuClose}\r\n\t\t\t\t\tcomponent={RouterLink}\r\n\t\t\t\t\tto={`/posts/${notification.postId}`}>\r\n\t\t\t\t\t{`${notification.message} ${formateDate(notification.createdAt)}`}\r\n\t\t\t\t</MenuItem>)\r\n\t\t\t})\r\n\t\t\t\t: <MenuItem onClick={handleMenuClose}>You have no notifications yet</MenuItem>\r\n\t\t\t}\r\n\t\t</Menu>\r\n\t\t\t: (\r\n\t\t\t\t<Menu\r\n\t\t\t\t\tanchorEl={anchorEl}\r\n\t\t\t\t\tanchorOrigin={{ vertical: \"top\", horizontal: 'left' }}\r\n\t\t\t\t\tid=\"account-menu\"\r\n\t\t\t\t\tkeepMounted\r\n\t\t\t\t\ttransformOrigin={{ vertical: 'bottom', horizontal: 'right' }}\r\n\t\t\t\t\topen={Boolean(anchorEl)}\r\n\t\t\t\t\tonClose={handleMenuClose}\r\n\t\t\t\t>\r\n\t\t\t\t\t<MenuItem>\r\n\t\t\t\t\t\t<div style={{ minWidth: 300, minHeight: 100 }}>\r\n\t\t\t\t\t\t\t<CircularProgress className={classes.progressbar} size={30} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</MenuItem>\r\n\t\t\t\t</Menu>\r\n\t\t\t)\r\n\t);\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Tooltip title=\"Notifications\">\r\n\t\t\t\t<IconButton aria-label=\"Notifications\" color=\"inherit\" onClick={handleMenuOpen}>\r\n\t\t\t\t\t<NotificationsNoneIcon />\r\n\t\t\t\t</IconButton>\r\n\t\t\t</Tooltip>\r\n\t\t\t{renderNotifications}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default Notification;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link as RouterLink, useLocation, useHistory } from 'react-router-dom'\r\nimport {\r\n    AppBar,\r\n    CssBaseline,\r\n    Divider,\r\n    Drawer,\r\n    Hidden,\r\n    IconButton,\r\n    List,\r\n    ListItem,\r\n    ListItemIcon,\r\n    ListItemText,\r\n    Toolbar,\r\n    Typography,\r\n    Button,\r\n    ThemeProvider,\r\n    Container,\r\n    Menu,\r\n    MenuItem,\r\n    Avatar,\r\n    Tooltip,\r\n} from '@material-ui/core';\r\nimport { zhCN } from '@material-ui/core/locale';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport RssFeedIcon from '@material-ui/icons/RssFeed';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport WhatshotIcon from '@material-ui/icons/Whatshot';\r\n// import SearchIcon from '@material-ui/icons/Search';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\n// import CollectionsIcon from '@material-ui/icons/Collections';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport Brightness7Icon from '@material-ui/icons/Brightness7';\r\nimport Brightness4Icon from '@material-ui/icons/Brightness4';\r\nimport { makeStyles, useTheme, createMuiTheme } from '@material-ui/core/styles';\r\nimport { Link } from 'react-router-dom';\r\nimport AuthContext from \"../utils/AuthContext\";\r\nimport UserContext from '../utils/UserContext';\r\nimport { useSnackbar } from 'notistack';\r\nimport NewPost from './NewPost';\r\nimport Notification from './Notification';\r\nimport { SERVER } from '../config'\r\nconst drawerWidth = 300;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    drawer: {\r\n        [theme.breakpoints.up('md')]: {\r\n            width: drawerWidth,\r\n            flexShrink: 0,\r\n        },\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n        [theme.breakpoints.up('md')]: {\r\n            display: 'none',\r\n        },\r\n    },\r\n    // necessary for content to be below app bar\r\n    toolbar: theme.mixins.toolbar,\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        paddingTop: theme.spacing(3),\r\n    },\r\n    //added by me\r\n    grow: {\r\n        flexGrow: 1,\r\n    },\r\n    mrLeft: {\r\n        marginLeft: theme.spacing(1),\r\n    },\r\n    title: {\r\n        textDecoration: 'none',\r\n    },\r\n    justCenter: {\r\n        justifyContent: 'center',\r\n    },\r\n    avatar: {\r\n        width: theme.spacing(10),\r\n        height: theme.spacing(10),\r\n    }\r\n}));\r\n\r\nfunction Navigation(props) {\r\n    const { window } = props;\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [mobileOpen, setMobileOpen] = React.useState(false);\r\n    const { authState, authDispatch } = React.useContext(AuthContext);\r\n    const [user, setUser] = React.useState(null);\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    // const [locale, setLocale] = React.useState('zhCN')\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    const container = window !== undefined ? () => window().document.body : undefined;\r\n\r\n    // theme\r\n    const light = {\r\n        palette: {\r\n            type: 'light',\r\n            primary: {\r\n                main: '#00bcd4'\r\n            },\r\n        },\r\n    }\r\n    const dark = {\r\n        palette: {\r\n            type: 'dark',\r\n            primary: {\r\n                main: '#00bcd4'\r\n            },\r\n        },\r\n    }\r\n    const [myTheme, setTheme] = React.useState(!(localStorage.getItem(\"theme\") === 'true'));\r\n    const appliedTheme = createMuiTheme((myTheme ? light : dark), zhCN);\r\n\r\n    const icon = !myTheme ? <Brightness7Icon /> : <Brightness4Icon />\r\n\r\n    const handleThemeChange = () => {\r\n        localStorage.setItem(\"theme\", myTheme)\r\n        setTheme(!myTheme);\r\n    }\r\n\r\n    const handleProfileMenuOpen = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    // profile menu close\r\n    const handleMenuClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const handleDrawerToggle = () => {\r\n        setMobileOpen(!mobileOpen);\r\n    };\r\n\r\n    const handleDrawerHide = () => {\r\n        if (mobileOpen) {\r\n            setMobileOpen(!mobileOpen);\r\n        }\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        if (authState.isAuthenticated) {\r\n            fetch(`${SERVER}/users/username/${authState.username}`, {\r\n                method: 'GET',\r\n                credentials: 'include'\r\n            })\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    if (data.success) {\r\n                        setUser(data)\r\n                    } else {\r\n                        if (data.status === 401)\r\n                            authDispatch({\r\n                                type: \"LOGOUT\"\r\n                            })\r\n                        setUser(null)\r\n                    }\r\n                })\r\n                .catch((error) => {\r\n                    setUser(null)\r\n                });\r\n        }\r\n    }, [authState, authState.refreshUser, authDispatch])\r\n\r\n    const handleLogout = () => {\r\n        fetch(`${SERVER}/auth/logout`, {\r\n            method: 'DELETE',\r\n            credentials: 'include'\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                if (data.success) {\r\n                    const variant = 'success';\r\n                    enqueueSnackbar('Logout successfully!', { variant });\r\n                    authDispatch({ type: 'LOGOUT' });\r\n                    history.push('/login');\r\n                } else {\r\n                    const variant = 'error';\r\n                    enqueueSnackbar('Logout failed!', { variant });\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                const variant = 'error';\r\n                enqueueSnackbar('Logout failed!', { variant });\r\n            });\r\n    }\r\n\r\n    const drawer = (\r\n        <div>\r\n            <div className={classes.toolbar} >\r\n                <ListItem>\r\n                    <div className={classes.grow}></div>\r\n                    <IconButton aria-label=\"Close Drawer\" color=\"inherit\" onClick={handleDrawerToggle}>\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                </ListItem>\r\n            </div>\r\n            <Divider />\r\n            {user && <Hidden smDown implementation=\"css\">\r\n                <List className={classes.userInfo}>\r\n                    <ListItem className={classes.justCenter}>\r\n                        <IconButton component={RouterLink} to={`/users/${user.login}`} area-label='view' style={{ padding: 0 }}>\r\n                            <Avatar\r\n                                className={classes.avatar}\r\n                                src={user.avatar ? `${SERVER}${user.avatar}` : \"\"}\r\n                                alt={`${user.login}'s avatar`}>\r\n                            </Avatar>\r\n                        </IconButton>\r\n                    </ListItem>\r\n                    <ListItem className={classes.justCenter} dense>\r\n                        <Typography\r\n                            variant=\"h6\"\r\n                            component={RouterLink}\r\n                            to={`/users/${user.login}`}\r\n                            color=\"inherit\"\r\n                            style={{ textDecoration: \"none\" }}\r\n                        >{user.login}</Typography>\r\n                    </ListItem>\r\n                    <ListItem className={classes.justCenter} dense>\r\n                        <List style={{ display: 'flex' }} disablePadding>\r\n                            <ListItem style={{ display: 'flex', flexDirection: \"column\" }} dense>\r\n                                <Typography variant='body1'>Posts</Typography>\r\n                                <Typography variant=\"h6\">{user.posts}</Typography>\r\n                            </ListItem>\r\n                            <ListItem style={{ display: 'flex', flexDirection: \"column\" }} dense>\r\n                                <Typography variant='body1'>Followers</Typography>\r\n                                <Typography variant=\"h6\">{user.followers}</Typography>\r\n                            </ListItem>\r\n                            <ListItem style={{ display: 'flex', flexDirection: \"column\" }} dense>\r\n                                <Typography variant='body1'>Following</Typography>\r\n                                <Typography variant=\"h6\">{user.following}</Typography>\r\n                            </ListItem>\r\n                        </List>\r\n                    </ListItem>\r\n                </List>\r\n            </Hidden>}\r\n            <Divider />\r\n            <List>\r\n                {[\r\n                    { name: \"Home\", icon: <HomeIcon />, index: 1, to: '/' },\r\n                    { name: \"Feed\", icon: <RssFeedIcon />, index: 2, to: \"/feed\" },\r\n                    { name: \"Trending\", icon: <WhatshotIcon />, index: 3, to: \"/trending\" },\r\n                    // { name: \"Explore\", icon: <SearchIcon />, index: 4, to: \"/explore\" },\r\n                    // { name: \"New\", icon: <CollectionsIcon />, index: 4, to: \"/new\" },\r\n                    { name: \"Settings\", icon: <SettingsIcon />, index: 5, to: \"/settings\" },\r\n                    { name: \"My Profile\", icon: <PersonIcon />, index: 6, to: `/users/${authState.username}` }\r\n                ].map((item, index) => (\r\n                    <ListItem button\r\n                        key={item.index}\r\n                        selected={location.pathname === item.to}\r\n                        component={RouterLink}\r\n                        to={item.to}\r\n                        onClick={handleDrawerHide}>\r\n                        <ListItemIcon>{item.icon}</ListItemIcon>\r\n                        <ListItemText primary={item.name} />\r\n                    </ListItem>\r\n                ))}\r\n            </List>\r\n            <Divider />\r\n            <List>\r\n                <ListItem button onClick={() => { handleDrawerHide(); handleLogout(); }}>\r\n                    <ListItemIcon><ExitToAppIcon /></ListItemIcon>\r\n                    <ListItemText primary=\"Logout\" />\r\n                </ListItem>\r\n            </List>\r\n        </div>\r\n    );\r\n\r\n    const renderMenu = (\r\n        <Menu\r\n            anchorEl={anchorEl}\r\n            anchorOrigin={{ vertical: \"top\", horizontal: 'left' }}\r\n            id=\"account-menu\"\r\n            keepMounted\r\n            transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n            open={Boolean(anchorEl)}\r\n            onClose={handleMenuClose}\r\n        >\r\n            {/*<MenuItem>Hi {authState.username}!</MenuItem>*/}\r\n            <MenuItem onClick={handleMenuClose} component={RouterLink} to='/settings'>Account Settings</MenuItem>\r\n            <MenuItem onClick={handleMenuClose} component={RouterLink} to={`/users/${authState.username}`} >Profile</MenuItem>\r\n            <MenuItem onClick={() => { handleMenuClose(); handleLogout(); }}>Logout</MenuItem>\r\n        </Menu>\r\n    );\r\n\r\n    return (\r\n        <ThemeProvider theme={appliedTheme}>\r\n            <div className={classes.root}>\r\n                <CssBaseline />\r\n                <AppBar position=\"fixed\" className={classes.appBar}>\r\n                    <Toolbar>\r\n                        {authState.isAuthenticated ? (\r\n                            <IconButton\r\n                                color=\"inherit\"\r\n                                aria-label=\"open drawer\"\r\n                                edge=\"start\"\r\n                                onClick={handleDrawerToggle}\r\n                                className={classes.menuButton}\r\n                            >\r\n                                <MenuIcon />\r\n                            </IconButton>\r\n                        ) : \"\"}\r\n                        <Typography variant=\"h6\" noWrap className={classes.title} component={RouterLink} to=\"/\" color=\"inherit\">\r\n                            LinkBook\r\n                        </Typography>\r\n                        <div className={classes.grow}></div>\r\n                        {authState.isAuthenticated && <NewPost />}\r\n                        <Tooltip title=\"Theme Toggle\">\r\n                            <IconButton aria-label=\"Theme toggle\" onClick={handleThemeChange} color=\"inherit\">\r\n                                {icon}\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                        {authState.isAuthenticated ? (\r\n                            <React.Fragment>\r\n                                <Notification />\r\n                                <Tooltip title=\"Account\">\r\n                                    <IconButton\r\n                                        aria-label=\"Current User\"\r\n                                        color=\"inherit\"\r\n                                        edge=\"end\"\r\n                                        aria-controls=\"account-menu\"\r\n                                        aria-haspopup=\"true\"\r\n                                        onClick={handleProfileMenuOpen}\r\n                                    >\r\n                                        <AccountCircle />\r\n                                    </IconButton>\r\n                                </Tooltip>\r\n\r\n                            </React.Fragment>\r\n                        ) : (\r\n                            <React.Fragment>\r\n                                <Button color=\"inherit\" component={Link} to=\"/login\" className={classes.mrLeft}>Login</Button>\r\n                                <Button color=\"inherit\" component={Link} to=\"/register\" className={classes.mrLeft}>Register</Button>\r\n                            </React.Fragment>\r\n                        )}\r\n                    </Toolbar>\r\n                </AppBar>\r\n                {renderMenu}\r\n                {authState.isAuthenticated ? (\r\n                    <nav className={classes.drawer} aria-label=\"Drawer\">\r\n                        {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\r\n                        <Hidden mdUp implementation=\"css\">\r\n                            <Drawer\r\n                                container={container}\r\n                                variant=\"temporary\"\r\n                                anchor={theme.direction === 'rtl' ? 'right' : 'left'}\r\n                                open={mobileOpen}\r\n                                onClose={handleDrawerToggle}\r\n                                classes={{\r\n                                    paper: classes.drawerPaper,\r\n                                }}\r\n                                ModalProps={{\r\n                                    keepMounted: true, // Better open performance on mobile.\r\n                                }}\r\n                            >\r\n                                {drawer}\r\n                            </Drawer>\r\n                        </Hidden>\r\n                        <Hidden smDown implementation=\"css\">\r\n                            <Drawer\r\n                                classes={{\r\n                                    paper: classes.drawerPaper,\r\n                                }}\r\n                                variant=\"permanent\"\r\n                                open\r\n                            >\r\n                                {drawer}\r\n                            </Drawer>\r\n                        </Hidden>\r\n                    </nav>)\r\n                    : \"\"\r\n                }\r\n                <main className={classes.content}>\r\n                    <div className={classes.toolbar} />\r\n                    <Container maxWidth=\"xl\" style={{height: \"100%\"}}>\r\n                        <UserContext.Provider value={user}>\r\n                            {props.children}\r\n                        </UserContext.Provider>\r\n                    </Container>\r\n\r\n                </main>\r\n            </div>\r\n        </ThemeProvider>\r\n    );\r\n}\r\n\r\nNavigation.propTypes = {\r\n    /**\r\n     * Injected by the documentation to work in an iframe.\r\n     * You won't need it on your project.\r\n     */\r\n    window: PropTypes.func,\r\n};\r\n\r\nexport default Navigation;","import { Route, Redirect } from 'react-router-dom';\r\nimport React from \"react\";\r\nimport AuthContext from \"../utils/AuthContext\";\r\n\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n    const { authState } = React.useContext(AuthContext);\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={props => (\r\n                authState.isAuthenticated\r\n                    ?\r\n                    <Component {...props} />\r\n                    :\r\n                    <Redirect to={'/login'} />\r\n            )\r\n            }\r\n        />\r\n    )\r\n};\r\n\r\n\r\n\r\nexport default PrivateRoute;","import { Route, Redirect } from 'react-router-dom';\r\nimport React from \"react\";\r\nimport AuthContext from \"../utils/AuthContext\";\r\n\r\n\r\nconst PublicRoute = ({ component: Component, ...rest }) => {\r\n    const { authState } = React.useContext(AuthContext);\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={props => (\r\n                !authState.isAuthenticated\r\n                    ?\r\n                    <Component {...props} />\r\n                    :\r\n                    <Redirect to={'/'} />\r\n            )\r\n            }\r\n        />\r\n    )\r\n};\r\n\r\n\r\nexport default PublicRoute;","import React from 'react';\r\nimport '../assets/css/loader.css'\r\n\r\nfunction Loader() {\r\n\treturn (\r\n\t\t<div className=\"loader__wrapper\">\r\n\t\t\t<div class=\"triple-spinner\"></div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Loader\r\n","import React, {Suspense} from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport ScrollToTop from './components/ScrollToTop';\nimport Navigation from \"./components/navigation\";\n\nimport PrivateRoute from \"./utils/PrivateRoute\";\nimport PublicRoute from \"./utils/PublicRoute\"\nimport AuthContext from \"./utils/AuthContext\";\nimport { SnackbarProvider } from 'notistack';\nimport Loader from './components/Loader';\n// import Home from './pages/Home';\n// import Login from \"./pages/Login\"\n// import Register from './pages/Register';\n// import User from './pages/User';\n// import Settings from './pages/Settings';\n// import Feed from './pages/Feed';\n// import Trending from './pages/Trending';\n// import PostById from './pages/PostById';\n// import ResetPass from './pages/ResetPass';\n// import NotFound from \"./pages/NotFound\";\n// import ForgetPass from './pages/ForgetPass';\n\n//lazy load components or pages\nconst Home = React.lazy(()=> import('./pages/Home'));\nconst Login = React.lazy(()=> import('./pages/Login'));\nconst Register = React.lazy(()=> import('./pages/Register'));\nconst User = React.lazy(()=> import('./pages/User'));\nconst Settings = React.lazy(()=> import('./pages/Settings'));\nconst Trending = React.lazy(()=> import('./pages/Trending'));\nconst Feed = React.lazy(()=> import('./pages/Feed'));\nconst NotFound = React.lazy(()=> import('./pages/NotFound'));\nconst PostById = React.lazy(()=> import('./pages/PostById'));\nconst ResetPass = React.lazy(()=> import('./pages/ResetPass'));\nconst ForgetPass = React.lazy(()=> import('./pages/ForgetPass'));\n\n\n\n// import { createBrowserHistory } from 'history';\n\n// const history = createBrowserHistory({ basename: '/socialmedia_frontend' });\n\nconst authReducer = (authState, action) => {\n  switch (action.type) {\n    case \"LOGIN\":\n      return {\n        ...authState,\n        isAuthenticated: true,\n        userId: action.payload.userId,\n        username: action.payload.username\n      };\n    case \"LOGOUT\":\n      return {\n        ...authState,\n        isAuthenticated: false,\n        userId: null,\n        username: null\n      };\n    case \"REFPOST\":\n      return {\n        ...authState,\n        refreshPost: !authState.refreshPost\n      };\n    case \"REFUSER\":\n      return {\n        ...authState,\n        refreshUser: !authState.refreshUser\n      };\n    default:\n      return authState;\n  }\n};\n\n\nfunction App(props) {\n  const initialState = props.initialState;\n  const [authState, authDispatch] = React.useReducer(authReducer, initialState);\n\n  return (\n    <React.Fragment>\n      {/*<Router basename=\"/socialmedia_frontend\" history={history}>*/}\n      <Router>\n        <SnackbarProvider\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'right',\n          }}\n          maxSnack={2}\n        >\n          <AuthContext.Provider value={{ authState, authDispatch }}>\n            <Suspense fallback={<Loader/>}>\n            <Navigation>\n              <Switch>\n                <Route exact path=\"/\" component={Home} />\n                <PublicRoute exact path=\"/login\" component={Login} />\n                <PublicRoute exact path=\"/forgetpass\" component={ForgetPass} />\n                <PublicRoute exact path=\"/forgetpass/:token\" component={ResetPass} />\n                <PublicRoute exact path=\"/register\" component={Register} />\n                <PrivateRoute exact path=\"/settings\" component={Settings} />\n                <PrivateRoute exact path=\"/feed\" component={Feed} />\n                <PrivateRoute exact path=\"/trending\" component={Trending} />\n                <PrivateRoute exact path=\"/posts/:postId\" component={PostById} />\n                <PrivateRoute exact path=\"/users/:username\" component={User} />\n                <Route exact path=\"/loader\" component={Loader}/>\n                <Route component={NotFound} />\n              </Switch>\n            </Navigation>\n            </Suspense>\n          </AuthContext.Provider>\n          <ScrollToTop />\n        </SnackbarProvider>\n      </Router>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import React, { Component } from 'react'\r\nimport App from '../App';\r\nimport { SERVER } from '../config'\r\n\r\n\r\nexport class CheckAuthWrapper extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            initialState: null\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(`${SERVER}/auth/`, {\r\n            method: 'GET',\r\n            credentials: 'include'\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                if (data.success) {\r\n                    this.setState({\r\n                        initialState: {\r\n                            isAuthenticated: true,\r\n                            userId: data.userId,\r\n                            username: data.username,\r\n                            refreshPost: false,\r\n                            refreshUser: false,\r\n                        }\r\n                    })\r\n                } else {\r\n                    this.setState({\r\n                        initialState: {\r\n                            isAuthenticated: false,\r\n                            userId: null,\r\n                            username: null,\r\n                            refreshPost: false,\r\n                            refreshUser: false,\r\n                        }\r\n                    });\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                this.setState({\r\n                    initialState: {\r\n                        isAuthenticated: false,\r\n                        userId: null,\r\n                        username: null,\r\n                        refreshUser: false,\r\n                        refreshPost: false,\r\n                    }\r\n                });\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            this.state.initialState ? (\r\n                <App initialState={this.state.initialState} />\r\n            ) : <p>Loading...</p>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CheckAuthWrapper\r\n\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import App from './App';\nimport CheckAuthWrapper from './components/CheckAuthWrapper'\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n\n  <CheckAuthWrapper />\n  , document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n","const SERVER = 'http://127.0.0.1:5000';\r\n// const SERVER = 'https://api.ankitkumarjat.me';\r\n// const SERVER = 'http://api.ankitkumarjat.me:5000';\r\n// const SERVER = 'http://192.168.42.150:5000';\r\n\r\nmodule.exports = {\r\n    SERVER\r\n}","import React from \"react\";\r\nconst AuthContext = React.createContext();\r\nexport default AuthContext;","const emailRegExp = new RegExp(/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/);\r\nconst passRegExp = new RegExp(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,16}$/);\r\nconst usernameRegExp = new RegExp(/^(?=.{4,20}$)[a-zA-Z0-9]*$/);\r\nconst postTextRegExp = new RegExp(/^.{10,255}$/);\r\n\r\nconst validateEmail = (email) => {\r\n    return emailRegExp.test(email);\r\n}\r\nconst validatePassword = (password) => {\r\n    return passRegExp.test(password);\r\n}\r\n\r\nconst validateUsername = (username) => {\r\n    return usernameRegExp.test(username);\r\n}\r\n\r\nconst validatePostText = (postText) => {\r\n    return postTextRegExp.test(postText);\r\n}\r\n\r\nmodule.exports = {\r\n    validateEmail,\r\n    validatePassword,\r\n    validateUsername,\r\n    validatePostText\r\n}","import React from \"react\";\r\nconst UserContext = React.createContext();\r\nexport default UserContext;","export default function formateDate(date, nowDate = Date.now(), rft = new Intl.RelativeTimeFormat(undefined, { numeric: \"auto\" })) {\r\n    const SECOND = 1000;\r\n    const MINUTE = 60 * SECOND;\r\n    const HOUR = 60 * MINUTE;\r\n    const DAY = 24 * HOUR;\r\n    const WEEK = 7 * DAY;\r\n    const MONTH = 30 * DAY;\r\n    const YEAR = 365 * DAY;\r\n    const intervals = [\r\n        { ge: YEAR, divisor: YEAR, unit: 'year' },\r\n        { ge: MONTH, divisor: MONTH, unit: 'month' },\r\n        { ge: WEEK, divisor: WEEK, unit: 'week' },\r\n        { ge: DAY, divisor: DAY, unit: 'day' },\r\n        { ge: HOUR, divisor: HOUR, unit: 'hour' },\r\n        { ge: MINUTE, divisor: MINUTE, unit: 'minute' },\r\n        { ge: 30 * SECOND, divisor: SECOND, unit: 'seconds' },\r\n        { ge: 0, divisor: 1, text: 'just now' },\r\n    ];\r\n    const now = typeof nowDate === 'object' ? nowDate.getTime() : new Date(nowDate).getTime();\r\n    const diff = now - (typeof date === 'object' ? date : new Date(date)).getTime();\r\n    const diffAbs = Math.abs(diff);\r\n    for (const interval of intervals) {\r\n        if (diffAbs >= interval.ge) {\r\n            const x = Math.round(Math.abs(diff) / interval.divisor);\r\n            const isFuture = diff < 0;\r\n            return interval.unit ? rft.format(isFuture ? x : -x, interval.unit) : interval.text;\r\n        }\r\n    }\r\n}"],"sourceRoot":""}