{"version":3,"sources":["components/Comment.js","components/PostCard.js","components/GetPosts.js","pages/Feed.js"],"names":["Comment","state","user","isLoading","fetch","SERVER","this","props","comment","userId","method","credentials","then","response","json","res","success","setState","login","avatar","userID","catch","error","Fragment","CardContent","style","display","Skeleton","animation","variant","width","height","IconButton","component","RouterLink","to","aria-label","padding","Avatar","src","marginLeft","flexGrow","marginBottom","Typography","color","textDecoration","formateDate","created_at","marginTop","value","Component","useStyles","makeStyles","theme","card","borderRadius","margin","spacing","cardContent","paddingTop","paddingBottom","commentForm","alignItems","commentAvatar","marginRight","progressbar","position","top","left","noPadding","media","PostCard","classes","React","useState","hide","setHide","loading","setLoading","authDispatch","useContext","AuthContext","post","setPost","values","setValues","liked","setLiked","anchorEl","setAnchorEl","UserContext","delete","disableBtn","setDisableBtn","expanded","setExpanded","enqueueSnackbar","useSnackbar","t","Date","toDateString","split","handleMenuClose","isMenuOpen","Boolean","menuId","postId","renderMenu","Menu","anchorOrigin","vertical","horizontal","id","keepMounted","transformOrigin","open","onClose","MenuItem","onClick","disabled","notSkeleton","owner","data","window","confirm","headers","body","JSON","stringify","type","message","console","handleDeletePost","handleLike","likes","status","useEffect","Card","className","CardHeader","alt","action","aria-controls","aria-haspopup","event","currentTarget","title","subheader","postImage","CardMedia","image","single","postText","like","comments","CardActions","disableSpacing","Tooltip","Collapse","in","timeout","unmountOnExit","Divider","onSubmit","e","preventDefault","commentslist","unshift","TextField","label","onChange","target","fullWidth","CircularProgress","size","map","commentId","GetPosts","loadMore","nextPage","nullPost","getPosts","page","url","next","posts","concat","history","push","handleLoadMore","prevProps","authState","refreshPost","justifyContent","withRouter","root","breakpoints","up","Feed","maxWidth","disableGutters"],"mappings":"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","file":"static/js/9.ab6dcdf4.chunk.js","sourcesContent":["import { Avatar, CardContent, IconButton, Typography } from '@material-ui/core'\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport React, { Component } from 'react'\r\nimport formateDate from '../utils/FormatDate';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport { SERVER } from '../config'\r\n\r\nexport class Comment extends Component {\r\n    state = {\r\n        user: null,\r\n        isLoading: true\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(`${SERVER}/users/avatar?userId=${this.props.comment.userId}`, {\r\n            method: 'GET',\r\n            credentials: 'include',\r\n        })\r\n            .then(response => response.json())\r\n            .then(res => {\r\n                if (res.success) {\r\n                    this.setState({ user: res, isLoading: false });\r\n                } else {\r\n                    this.setState({ user: { login: null, avatar: null, userId: this.props.comment.userID }, isLoading: false });\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                this.setState({ user: { login: null, avatar: null, userId: this.props.comment.userID }, isLoading: false });\r\n            });\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <CardContent style={{ display: 'flex' }}>\r\n                    {!this.state.isLoading ? (<IconButton\r\n                        component={RouterLink}\r\n                        to={`/users/${this.state.user.login}`}\r\n                        aria-label=\"user profile\"\r\n                        style={{ padding: 0, height: 'max-content' }}>\r\n                        <Avatar\r\n                            aria-label=\"user avatar\"\r\n                            src={this.state.user.avatar ? `${SERVER}${this.state.user.avatar}` : \"\"}>\r\n                        </Avatar>\r\n                    </IconButton>)\r\n                        : (<Skeleton animation=\"wave\" variant=\"circle\" width={40} height={40} />)\r\n                    }\r\n                    <div style={{ marginLeft: 16, flexGrow: 1 }} >\r\n                        {!this.state.isLoading ? (<Typography component=\"p\">\r\n                            <Typography\r\n                                variant='subtitle2'\r\n                                component={RouterLink}\r\n                                to={`/users/${this.state.user.login}`}\r\n                                color=\"inherit\"\r\n                                style={{ textDecoration: \"none\" }}\r\n                            >\r\n                                {this.state.user.login}\r\n                            </Typography>\r\n                            <Typography\r\n                                component='span'\r\n                                variant='caption'\r\n                                style={{ marginLeft: 8 }}>\r\n                                {formateDate(this.props.comment.created_at)}\r\n                            </Typography>\r\n                        </Typography>)\r\n                            : (<Skeleton animation=\"wave\" height={10} width=\"40%\" style={{ marginBottom: 18 }} />)\r\n                        }\r\n                        {!this.state.isLoading ? (<Typography component=\"p\" variant='body2' style={{ marginTop: 8 }}>\r\n                            {this.props.comment.value}\r\n                        </Typography>)\r\n                            : (<Skeleton animation=\"wave\" height={10} width=\"80%\" style={{ marginBottom: 12 }} />)\r\n                        }\r\n                    </div>\r\n                </CardContent>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Comment\r\n","import {\r\n    Avatar,\r\n    Card,\r\n    CardHeader,\r\n    CardMedia,\r\n    IconButton,\r\n    Typography,\r\n    CardContent,\r\n    CardActions,\r\n    Tooltip,\r\n    Collapse,\r\n    Divider,\r\n    TextField,\r\n    CircularProgress,\r\n    Menu,\r\n    MenuItem,\r\n} from '@material-ui/core';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\n// import ShareIcon from '@material-ui/icons/Share';\r\nimport ThumbUpAltOutlinedIcon from '@material-ui/icons/ThumbUpAltOutlined';\r\n// import ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\r\nimport CommentOutlinedIcon from '@material-ui/icons/CommentOutlined';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Comment from './Comment';\r\nimport AuthContext from '../utils/AuthContext';\r\nimport { useSnackbar } from 'notistack';\r\nimport UserContext from '../utils/UserContext';\r\nimport { SERVER } from \"../config\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        borderRadius: 10,\r\n        margin: 'auto',\r\n        marginBottom: theme.spacing(3),\r\n    },\r\n    cardContent: {\r\n        paddingTop: 0,\r\n        paddingBottom: 0,\r\n    },\r\n    marginLeft: {\r\n        marginLeft: theme.spacing(2)\r\n    },\r\n    commentForm: {\r\n        display: 'flex',\r\n        alignItems: \"center\",\r\n    },\r\n    commentAvatar: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    progressbar: {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        marginTop: -4,\r\n        marginLeft: -12,\r\n    },\r\n    noPadding: {\r\n        padding: 0,\r\n    },\r\n    media: {\r\n        paddingTop: '56.25%',\r\n    },\r\n}));\r\n\r\nexport default function PostCard(props) {\r\n    const classes = useStyles();\r\n    const [hide, setHide] = React.useState(false);\r\n    const [loading, setLoading] = React.useState(true);\r\n\r\n    const { authDispatch } = React.useContext(AuthContext);\r\n    const [post, setPost] = React.useState(props.post);\r\n    const [values, setValues] = React.useState({\r\n        comment: ''\r\n    });\r\n    const [liked, setLiked] = React.useState()\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n    const user = React.useContext(UserContext);\r\n\r\n    const [disableBtn, setDisableBtn] = React.useState({\r\n        comment: false,\r\n        delete: false,\r\n    });\r\n    const [expanded, setExpanded] = React.useState(false);\r\n\r\n    const { enqueueSnackbar } = useSnackbar();\r\n\r\n    const date = new Date(post.created_at);\r\n    const t = date.toDateString().split(\" \");\r\n\r\n    const handlePostMenuOpen = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleMenuClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const handleDeletePost = () => {\r\n        const data = { postId: post.postId };\r\n        if (window.confirm('Are you sure you want to delete post?')) {\r\n            fetch(`${SERVER}/posts/delete`, {\r\n                method: 'DELETE',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                credentials: 'include',\r\n                body: JSON.stringify(data),\r\n            })\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    if (data.success) {\r\n                        enqueueSnackbar('Post Deleted!', { variant: \"success\" });\r\n                        authDispatch({\r\n                            type: 'REFUSER',\r\n                        });\r\n                        setHide(true);\r\n                    } else {\r\n                        enqueueSnackbar(data.message, { variant: \"error\" });\r\n                        setDisableBtn({\r\n                            delete: false\r\n                        })\r\n                    }\r\n                })\r\n                .catch((error) => {\r\n                    enqueueSnackbar('Post deletion failed!', { variant: \"error\" });\r\n                    setDisableBtn({\r\n                        delete: false\r\n                    })\r\n                    console.error('Error:', error);\r\n                });\r\n        }\r\n    }\r\n\r\n    const isMenuOpen = Boolean(anchorEl)\r\n    const menuId = `post-${post.postId}-menu`;\r\n    const renderMenu = (\r\n        <Menu\r\n            anchorEl={anchorEl}\r\n            anchorOrigin={{ vertical: 'top', horizontal: 'left' }}\r\n            id={menuId}\r\n            keepMounted\r\n            transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n            open={isMenuOpen}\r\n            onClose={handleMenuClose}\r\n        >\r\n            {/*<MenuItem>Hi {authState.username}!</MenuItem>*/}\r\n            <MenuItem onClick={handleMenuClose} disabled>Save Post</MenuItem>\r\n            <MenuItem onClick={handleMenuClose} disabled>Report post</MenuItem>\r\n            {!loading && props.notSkeleton && post.owner && user.userId === post.owner.userId && (<div>\r\n                {/*<Divider />*/}\r\n                <MenuItem onClick={() => { handleMenuClose(); handleDeletePost(); }} >\r\n                    <Typography color='secondary'>Delete post</Typography>\r\n                </MenuItem>\r\n            </div>)}\r\n        </Menu>\r\n    );\r\n\r\n    const handleExpandClick = () => {\r\n        setExpanded(!expanded);\r\n    };\r\n    const handleChange = (event) => {\r\n        setValues({ ...values, comment: event.target.value });\r\n    }\r\n\r\n    const handleSubmitNewComment = (e) => {\r\n        e.preventDefault()\r\n        if (values.comment) {\r\n            setDisableBtn({ comment: true })\r\n            const body = { postId: post.postId, value: values.comment }\r\n            fetch(`${SERVER}/posts/comment`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                credentials: 'include',\r\n                body: JSON.stringify(body)\r\n            })\r\n                .then(response => response.json())\r\n                .then(res => {\r\n                    if (res.success) {\r\n                        setValues({ comment: '' });\r\n                        enqueueSnackbar(res.message, { variant: \"success\" });\r\n                        var comments = post.commentslist;\r\n                        comments.unshift(res);\r\n                        setPost({\r\n                            ...post,\r\n                            comments: post.comments + 1,\r\n                            commentslist: comments\r\n                        });\r\n                    } else {\r\n                        if (res.status === 401)\r\n                            authDispatch({\r\n                                type: \"logout\"\r\n                            })\r\n                        enqueueSnackbar(res.message, { variant: \"error\" });\r\n\r\n                    }\r\n                    setDisableBtn({ comment: false });\r\n                })\r\n                .catch((error) => {\r\n                    enqueueSnackbar('Failed to get post', { variant: \"error\" });\r\n                    setDisableBtn({ comment: false });\r\n                    console.error('Error:', error);\r\n                });\r\n        } else {\r\n            enqueueSnackbar(\"Comment can't be empty\", { variant: \"warning\" });\r\n        }\r\n    }\r\n\r\n    const handleLike = () => {\r\n        fetch(`${SERVER}/posts/like?postId=${post.postId}`, {\r\n            method: 'POST',\r\n            credentials: 'include',\r\n        })\r\n            .then(response => response.json())\r\n            .then(res => {\r\n                if (res.success) {\r\n                    if (res.success) {\r\n                        if (res.liked) {\r\n                            setPost({\r\n                                ...post,\r\n                                likes: post.likes + 1,\r\n                            })\r\n                        } else {\r\n                            setPost({\r\n                                ...post,\r\n                                likes: post.likes - 1,\r\n                            })\r\n                        }\r\n                        setLiked(res.liked)\r\n                        // enqueueSnackbar(res.message, { variant: \"success\" });\r\n                    } else {\r\n                        if (res.status === 401)\r\n                            authDispatch({\r\n                                type: \"logout\"\r\n                            })\r\n                        enqueueSnackbar(res.message, { variant: \"error\" });\r\n                    }\r\n                }\r\n\r\n            })\r\n            .catch((error) => {\r\n                enqueueSnackbar('Failed to like post', { variant: \"error\" });\r\n            });\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        if (props.notSkeleton && post.postId) {\r\n            fetch(`${SERVER}/posts/like?postId=${post.postId}`, {\r\n                method: 'GET',\r\n                credentials: 'include',\r\n            })\r\n                .then(response => response.json())\r\n                .then(res => {\r\n                    if (res.success) {\r\n                        setLiked(res.liked);\r\n                        // enqueueSnackbar(res.message, { variant: \"success\" });\r\n                    }\r\n                    // else {\r\n                    // if (res.status === 401)\r\n                    //     authDispatch({\r\n                    //         type: \"logout\"\r\n                    //     })\r\n                    // }\r\n                    setLoading(false);\r\n                })\r\n                .catch((error) => {\r\n                    setLoading(false);\r\n                    // enqueueSnackbar('Failed to like post', { variant: \"error\" });\r\n                })\r\n        }\r\n    }, [setLiked, post.postId, props.notSkeleton])\r\n\r\n    // React.useState(() => {\r\n    //     if (post !== props.post) {\r\n    //         setPost(props.post);\r\n    //     }\r\n    // }, [props.post])\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {!hide && <Card className={classes.card} variant=\"outlined\">\r\n                <CardHeader\r\n                    avatar={!loading && props.notSkeleton ? (<IconButton\r\n                        component={RouterLink}\r\n                        to={`/users/${post.owner.login}`}\r\n                        className={classes.noPadding}\r\n                        aria-label=\"user profile\">\r\n                        <Avatar aria-label=\"user avatar\" alt={post.owner.login} src={post.owner.avatar ? `${SERVER}${post.owner.avatar}` : \"\"}>\r\n                        </Avatar>\r\n                    </IconButton>)\r\n                        : (<Skeleton animation=\"wave\" variant=\"circle\" width={40} height={40} />)\r\n                    }\r\n                    action={!loading && props.notSkeleton ?\r\n                        (<IconButton\r\n                            aria-label=\"Post options\"\r\n                            aria-controls={menuId}\r\n                            aria-haspopup=\"true\"\r\n                            onClick={handlePostMenuOpen}\r\n                        >\r\n                            <MoreVertIcon />\r\n                        </IconButton>)\r\n                        : null\r\n                    }\r\n                    title={!loading ? (\r\n                        <Typography\r\n                            component={RouterLink}\r\n                            to={`/users/${post.owner.login}`}\r\n                            color=\"inherit\"\r\n                            variant=\"body2\"\r\n                            style={{ textDecoration: \"none\" }}>\r\n                            {post.owner.login}\r\n                        </Typography>\r\n                    )\r\n                        : (<Skeleton animation=\"wave\" height={10} width=\"80%\" style={{ marginBottom: 6 }} />)}\r\n                    subheader={!loading ? `${t[1]} ${t[2]} ${t[3]}` : (<Skeleton animation=\"wave\" height={10} width=\"40%\" />)}\r\n                />\r\n                {!loading && props.notSkeleton ?\r\n                    (post.postImage && <CardMedia\r\n                        style={{\r\n                            height: 0,\r\n                            paddingTop: '56.25%',\r\n                        }}\r\n                        image={`${SERVER}${post.postImage}`}\r\n                        title={`${post.owner.login}'s post`}\r\n                        alt={post.postImage}\r\n                        to={`/posts/${post.postId}`}\r\n                        component={props.single ? CardContent : RouterLink}\r\n                    />\r\n                    )\r\n                    : (<Skeleton animation=\"wave\" variant=\"rect\" className={classes.media} />)\r\n                }\r\n                <CardContent>\r\n                    {!loading && props.notSkeleton ? (<Typography component=\"p\">\r\n                        {post.postText}\r\n                    </Typography>)\r\n                        : (<React.Fragment>\r\n                            <Skeleton animation=\"wave\" height={10} style={{ marginBottom: 6 }} />\r\n                            <Skeleton animation=\"wave\" height={10} width=\"80%\" />\r\n                        </React.Fragment>)\r\n                    }\r\n                </CardContent>\r\n\r\n                {!loading && props.notSkeleton ? (<Typography className={classes.marginLeft} variant='subtitle2' component=\"p\">\r\n                    {post.likes} {post.like > 1 ? \"Likes\" : \"Like\"}\r\n                    <Typography component=\"span\" variant='subtitle2' className={classes.marginLeft}>{post.comments} {post.comments > 1 ? \"Comments\" : \"Comment\"}</Typography>\r\n                </Typography>)\r\n                    : (<Skeleton animation=\"wave\" height={10} width=\"50%\" style={{ marginLeft: 16, marginBottom: 11 }} />)\r\n                }\r\n                <CardActions disableSpacing >\r\n                    {props.notSkeleton ? (<React.Fragment>\r\n                        {liked ? <Tooltip title=\"Unlike this\">\r\n                            <IconButton aria-label=\"unlike\" onClick={handleLike} color='primary'>\r\n                                <ThumbUpAltOutlinedIcon color=\"inherit\" />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                            : <Tooltip title=\"Like this\">\r\n                                <IconButton aria-label=\"like\" onClick={handleLike}>\r\n                                    <ThumbUpAltOutlinedIcon />\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                        }\r\n                        <Tooltip title=\"Comments\">\r\n                            <IconButton className={classes.marginLeft} aria-label=\"comment\" onClick={handleExpandClick}>\r\n                                <CommentOutlinedIcon />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                        {/*<Tooltip title=\"Share this\">\r\n                            <IconButton aria-label=\"share\" className={classes.marginLeft}>\r\n                                <ShareIcon />\r\n                            </IconButton>\r\n                    </Tooltip>*/}\r\n                    </React.Fragment>)\r\n                        : (<div style={{ height: 36 }}></div>)\r\n                    }\r\n                </CardActions>\r\n                <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n                    <Divider />\r\n                    <CardContent>\r\n                        <form onSubmit={handleSubmitNewComment} className={classes.commentForm}>\r\n                            {user && <Avatar src={user.avatar ? `${SERVER}${user.avatar}` : \"\"} className={classes.commentAvatar}></Avatar>}\r\n                            <TextField id=\"commentInput\" label=\"Write a comment...\" onChange={handleChange} value={values.comment} fullWidth />\r\n                            <div style={{ position: 'relative' }}>\r\n                                <Tooltip title=\"Add Comment\">\r\n                                    <IconButton aria-label=\"add comment\" color=\"primary\" type='submit' disabled={disableBtn.comment}>\r\n                                        <SendIcon />\r\n                                    </IconButton>\r\n                                </Tooltip>\r\n                                {disableBtn.comment && <CircularProgress size={24} className={classes.progressbar}></CircularProgress>}\r\n                            </div>\r\n                        </form>\r\n                    </CardContent>\r\n                    {props.notSkeleton && (post.commentslist.map(comment => <Comment comment={comment} key={comment.commentId} />))}\r\n                </Collapse>\r\n            </Card>}\r\n            {renderMenu}\r\n        </React.Fragment>\r\n    )\r\n}\r\n","import React, { Component } from 'react';\r\nimport PostCard from '../components/PostCard';\r\nimport { SERVER } from '../config';\r\nimport { withRouter } from \"react-router\";\r\nimport {\r\n    Button,\r\n    CircularProgress,\r\n    Box,\r\n} from '@material-ui/core';\r\n\r\nexport class GetPosts extends Component {\r\n    state = {\r\n        data: null,\r\n        loadMore: false,\r\n        nextPage: 1\r\n    }\r\n\r\n    nullPost = { postId: null, userId: null, postImage: null, postText: null, created_at: null };\r\n\r\n    getPosts = (page) => {\r\n        fetch(`${SERVER}${this.props.url}?page=${page}`, {\r\n            method: 'GET',\r\n            credentials: 'include',\r\n        })\r\n            .then(response => response.json())\r\n            .then(res => {\r\n                if (res.success) {\r\n                    if (this.state.nextPage > 1) {\r\n                        this.setState({\r\n                            ...this.state,\r\n                            data: {\r\n                                next: res.next,\r\n                                posts: this.state.data.posts.concat(res.posts)\r\n                            },\r\n                            nextPage: this.state.nextPage + 1,\r\n                            loadMore: false,\r\n                        });\r\n                    } else {\r\n                        this.setState({\r\n                            ...this.state,\r\n                            data: res,\r\n                            nextPage: this.state.nextPage + 1,\r\n                            loadMore: false,\r\n                        });\r\n                    }\r\n                } else {\r\n                    if (res.status === 401) {\r\n                        if (this.props.page) {\r\n                            this.props.history.push(this.props.page)\r\n                        } else {\r\n                            this.props.history.push('/login')\r\n                        }\r\n                    }\r\n                    // enqueueSnackbar(res.message, { variant: \"error\" });\r\n                    this.setState({\r\n                        ...this.state,\r\n                        nextPage: this.state.nextPage - 1,\r\n                        loadMore: false\r\n                    });\r\n                    this.props.history.push('/login')\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                // enqueueSnackbar('Failed to get post', { variant: \"error\" });\r\n                this.setState({\r\n                    ...this.state,\r\n                    nextPage: this.state.nextPage - 1,\r\n                    loadMore: false\r\n                });\r\n                console.error('Error:', error);\r\n            });\r\n    }\r\n\r\n    handleLoadMore = () => {\r\n        this.setState({\r\n            ...this.state,\r\n            loadMore: true\r\n        })\r\n        this.getPosts(this.state.nextPage);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getPosts(this.state.nextPage);\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.authState.refreshPost !== prevProps.authState.refreshPost) {\r\n            this.setState({\r\n                ...this.state,\r\n                nextPage: 1,\r\n            })\r\n            this.getPosts(1);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                {this.state.data ? (this.state.data.posts.map(post => <PostCard post={post} notSkeleton={true} key={post.postId} />))\r\n                    : (<React.Fragment>\r\n                        <PostCard notSkeleton={false} post={this.nullPost} key='skelton1' />\r\n                        <PostCard notSkeleton={false} post={this.nullPost} key='skelton2' />\r\n                    </React.Fragment>)\r\n                }\r\n                {this.state.data && this.state.data.next && <Box\r\n                    display=\"flex\"\r\n                    justifyContent=\"center\"\r\n                    style={{\r\n                        position: 'relative',\r\n                        marginBottom: 24,\r\n                    }}>\r\n                    <Button\r\n                        variant='outlined'\r\n                        color=\"primary\"\r\n                        onClick={this.handleLoadMore}\r\n                        disabled={this.state.loadMore}>\r\n                        Load More\r\n                    </Button>\r\n                    {this.state.loadMore && <CircularProgress\r\n                        size={24}\r\n                        style={{\r\n                            position: 'absolute',\r\n                            top: '50%',\r\n                            left: '50%',\r\n                            marginTop: -12,\r\n                            marginLeft: -12,\r\n                        }}>\r\n                    </CircularProgress>}\r\n                </Box>}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(GetPosts);\r\n","import React from 'react'\r\nimport {\r\n    Container,\r\n    Box,\r\n    Typography,\r\n} from '@material-ui/core'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n// import { useSnackbar } from 'notistack';\r\nimport AuthContext from '../utils/AuthContext';\r\nimport GetPosts from '../components/GetPosts';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        [theme.breakpoints.up('sm')]: {\r\n            margin: theme.spacing(2),\r\n        }\r\n    },\r\n    marginBottom: {\r\n        marginBottom: theme.spacing(3),\r\n    },\r\n}));\r\n\r\nfunction Feed() {\r\n    const { authState } = React.useContext(AuthContext);\r\n    const classes = useStyles();\r\n\r\n    // const { enqueueSnackbar } = useSnackbar();\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Box className={classes.root}>\r\n                <Container maxWidth=\"sm\" disableGutters>\r\n                    <Typography variant=\"h4\" className={classes.marginBottom}>Feed</Typography>\r\n                    <GetPosts authState={authState} url=\"/posts/feed/\" />\r\n                </Container>\r\n                {/*<div style={{ flexGrow: 1 }}></div>*/}\r\n            </Box>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Feed;"],"sourceRoot":""}