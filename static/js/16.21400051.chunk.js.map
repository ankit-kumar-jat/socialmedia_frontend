{"version":3,"sources":["components/ChangePasswordForm.js","components/EditProfile.js","pages/Settings.js"],"names":["useStyles","makeStyles","theme","margin","marginTop","spacing","relative","position","progressbar","top","left","marginLeft","ChangePasswordForm","classes","React","useState","oldPassword","password","confirmPassword","showPassword","showOldPassword","values","setValues","errors","setErrors","submit","disableBtn","setDisableBtn","enqueueSnackbar","useSnackbar","handleChange","prop","event","target","value","validatePassword","handleMouseDownPassword","preventDefault","Fragment","onSubmit","e","console","log","data","fetch","SERVER","method","headers","credentials","body","JSON","stringify","then","response","json","success","variant","message","catch","error","FormControl","fullWidth","className","InputLabel","htmlFor","Input","id","type","onChange","endAdornment","InputAdornment","IconButton","aria-label","onClick","onMouseDown","FormHelperText","clsx","Button","color","disabled","CircularProgress","size","form","marginBottom","EditProfile","user","useContext","UserContext","authDispatch","AuthContext","name","email","bio","website","location","disable","setDisable","useEffect","status","TextField","rows","label","multiline","maxLength","root","breakpoints","up","mrBottom","mrTop","Settings","index","setIndex","Box","Typography","Tabs","indicatorColor","textColor","style","overflow","Tab","Divider","display","Container","maxWidth","disableGutters","flexGrow"],"mappings":"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","file":"static/js/16.21400051.chunk.js","sourcesContent":["import {\r\n    Button,\r\n    FormControl,\r\n    FormHelperText,\r\n    IconButton,\r\n    Input,\r\n    InputAdornment,\r\n    InputLabel,\r\n    CircularProgress\r\n} from '@material-ui/core'\r\nimport React from 'react'\r\n\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\r\n// import VpnKeyIcon from '@material-ui/icons/VpnKey';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { useSnackbar } from 'notistack';\r\nimport { validatePassword } from '../utils/validator'\r\nimport { SERVER } from '../config';\r\nimport clsx from 'clsx';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    margin: {\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    relative: {\r\n        position: 'relative',\r\n    },\r\n    progressbar: {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        marginTop: -12,\r\n        marginLeft: -12,\r\n    }\r\n}));\r\n\r\nexport default function ChangePasswordForm() {\r\n    const classes = useStyles();\r\n    const [values, setValues] = React.useState({\r\n        oldPassword: '',\r\n        password: '',\r\n        confirmPassword: '',\r\n        showPassword: false,\r\n        showOldPassword: false,\r\n    });\r\n\r\n    const [errors, setErrors] = React.useState({\r\n        password: false,\r\n        confirmPassword: false\r\n    });\r\n\r\n    const [disableBtn, setDisableBtn] = React.useState({\r\n        submit: false,\r\n    })\r\n\r\n    const { enqueueSnackbar } = useSnackbar();\r\n\r\n    const handleChange = (prop) => (event) => {\r\n        setValues({ ...values, [prop]: event.target.value });\r\n        if (prop === \"password\") {\r\n            setErrors({\r\n                password: !validatePassword(event.target.value)\r\n            })\r\n        } else if (prop === \"confirmPassword\") {\r\n            setErrors({\r\n                confirmPassword: event.target.value !== values.password ? true : false\r\n            })\r\n        }\r\n    };\r\n\r\n    const handleClickShowPassword = () => {\r\n        setValues({ ...values, showPassword: !values.showPassword });\r\n    };\r\n\r\n    const handleClickShowOldPassword = () => {\r\n        setValues({ ...values, showOldPassword: !values.showOldPassword });\r\n    };\r\n\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    const handleChangePass = (e) => {\r\n        e.preventDefault();\r\n        console.log(\"change pass submitted\")\r\n        if (!errors.password && !errors.confirmPassword && values.password && values.oldPassword) {\r\n            setDisableBtn({\r\n                submit: true\r\n            });\r\n            const data = {\r\n                oldPassword: values.oldPassword,\r\n                password: values.password,\r\n                confirmPassword: values.confirmPassword\r\n            };\r\n            fetch(`${SERVER}/auth/update-pass`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                credentials: 'include',\r\n                body: JSON.stringify(data),\r\n            })\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    if (data.success) {\r\n                        enqueueSnackbar('Password Changed successfully!', { variant: \"success\" });\r\n                        setValues({\r\n                            oldPassword: '',\r\n                            password: '',\r\n                            confirmPassword: '',\r\n                            showPassword: false,\r\n                            showOldPassword: false,\r\n                        });\r\n                    } else {\r\n                        enqueueSnackbar(data.message, { variant: \"error\" });\r\n                    }\r\n                    setDisableBtn({\r\n                        submit: false\r\n                    })\r\n                })\r\n                .catch((error) => {\r\n                    enqueueSnackbar('Password Change failed!', { variant: \"error\" });\r\n                    setDisableBtn({\r\n                        submit: false\r\n                    })\r\n                    console.error('Error:', error);\r\n                });\r\n        } else {\r\n            enqueueSnackbar('Current password or new password should be valid.', { variant: \"warning\" });\r\n        }\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            <form onSubmit={handleChangePass}>\r\n                <FormControl fullWidth className={classes.margin}>\r\n                    <InputLabel htmlFor=\"userCurrentPassword\">Current Password</InputLabel>\r\n                    <Input\r\n                        id=\"userCurrentPassword\"\r\n                        type={values.showOldPassword ? 'text' : 'password'}\r\n                        value={values.oldPassword}\r\n                        onChange={handleChange('oldPassword')}\r\n                        /*startAdornment={\r\n                            <InputAdornment position=\"start\" >\r\n                                <VpnKeyIcon />\r\n                            </InputAdornment>\r\n                        }*/\r\n                        endAdornment={\r\n                            <InputAdornment position=\"end\" >\r\n                                <IconButton\r\n                                    aria-label=\"toggle confirm password visibility\"\r\n                                    onClick={handleClickShowOldPassword}\r\n                                    onMouseDown={handleMouseDownPassword}\r\n                                >\r\n                                    {values.showOldPassword ? <VisibilityIcon /> : <VisibilityOffIcon />}\r\n                                </IconButton>\r\n                            </InputAdornment>\r\n                        }\r\n                    />\r\n                </FormControl>\r\n                <FormControl fullWidth className={classes.margin} error={errors.password}>\r\n                    <InputLabel htmlFor=\"userPassword\">New Password</InputLabel>\r\n                    <Input\r\n                        id=\"userPassword\"\r\n                        type={values.showPassword ? 'text' : 'password'}\r\n                        value={values.password}\r\n                        onChange={handleChange('password')}\r\n                        /*startAdornment={\r\n                            <InputAdornment position=\"start\" >\r\n                                <VpnKeyIcon />\r\n                            </InputAdornment>\r\n                        }*/\r\n                        endAdornment={\r\n                            <InputAdornment position=\"end\" >\r\n                                <IconButton\r\n                                    aria-label=\"toggle password visibility\"\r\n                                    onClick={handleClickShowPassword}\r\n                                    onMouseDown={handleMouseDownPassword}\r\n                                >\r\n                                    {values.showPassword ? <VisibilityIcon /> : <VisibilityOffIcon />}\r\n                                </IconButton>\r\n                            </InputAdornment>\r\n                        }\r\n                    />\r\n                    <FormHelperText>Use 8 or more characters with a mix of letters, numbers & symbols</FormHelperText>\r\n                </FormControl>\r\n                <FormControl fullWidth className={classes.margin} error={errors.confirmPassword}>\r\n                    <InputLabel htmlFor=\"userConfirmPassword\">Confirm Password</InputLabel>\r\n                    <Input\r\n                        id=\"userConfirmPassword\"\r\n                        type={values.showPassword ? 'text' : 'password'}\r\n                        value={values.confirmPassword}\r\n                        onChange={handleChange('confirmPassword')}\r\n                    /*startAdornment={\r\n                        <InputAdornment position=\"start\" >\r\n                            <VpnKeyIcon />\r\n                        </InputAdornment>\r\n                    }*/\r\n                    />\r\n                </FormControl>\r\n                <FormControl className={clsx(classes.margin, classes.relative)} >\r\n                    <Button variant=\"contained\" color=\"primary\" type='submit' disabled={disableBtn.submit}>Change Password</Button>\r\n                    {disableBtn.submit && <CircularProgress size={24} className={classes.progressbar}></CircularProgress>}\r\n                </FormControl>\r\n            </form>\r\n        </React.Fragment>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport UserContext from '../utils/UserContext';\r\nimport {\r\n    Button,\r\n    FormControl,\r\n    CircularProgress,\r\n    Input,\r\n    InputLabel,\r\n    TextField\r\n} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport { SERVER } from '../config';\r\nimport AuthContext from '../utils/AuthContext';\r\nimport { useSnackbar } from 'notistack';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    submit: {\r\n        position: 'relative'\r\n    },\r\n    progressbar: {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        marginTop: -12,\r\n        marginLeft: -12,\r\n    },\r\n    margin: {\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    form: {\r\n        marginBottom: theme.spacing(4)\r\n    }\r\n}));\r\n\r\nexport default function EditProfile() {\r\n    const classes = useStyles();\r\n    const user = React.useContext(UserContext);\r\n    const { authDispatch } = React.useContext(AuthContext);\r\n    const [values, setValues] = React.useState({\r\n        name: '',\r\n        email: '',\r\n        bio: '',\r\n        website: '',\r\n        location: '',\r\n    });\r\n    const [disable, setDisable] = React.useState(false);\r\n    const { enqueueSnackbar } = useSnackbar();\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setDisable(true);\r\n        const data = {\r\n            \"email\": values.email,\r\n            \"name\": values.name,\r\n            \"bio\": values.bio,\r\n            \"location\": values.location,\r\n            \"website\": values.website\r\n        };\r\n        fetch(`${SERVER}/users/update-profile`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            credentials: 'include',\r\n            body: JSON.stringify(data),\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                if (data.success) {\r\n                    enqueueSnackbar('Profile updated!', { variant: \"success\" })\r\n                    authDispatch({\r\n                        type: 'REFUSER'\r\n                    })\r\n                } else {\r\n                    if (data.status === 401)\r\n                        authDispatch({\r\n                            type: \"LOGOUT\"\r\n                        })\r\n                    enqueueSnackbar(data.message, { variant: \"error\" });\r\n                }\r\n                setDisable(false)\r\n            })\r\n            .catch((error) => {\r\n                enqueueSnackbar('Profile updation Failed', { variant: 'error' });\r\n                setDisable(false)\r\n                console.error('Error:', error);\r\n            });\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        if (user) {\r\n            setValues({\r\n                name: user.name,\r\n                email: user.email,\r\n                bio: user.bio,\r\n                website: user.website,\r\n                location: user.location,\r\n            })\r\n        }\r\n    }, [user])\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <form onSubmit={handleSubmit} className={classes.form}>\r\n                <FormControl fullWidth className={classes.margin}>\r\n                    <InputLabel htmlFor=\"userName\">Name</InputLabel>\r\n                    <Input\r\n                        type=\"text\"\r\n                        id=\"userName\"\r\n                        value={values.name}\r\n                        onChange={e => setValues({ ...values, name: e.target.value })}\r\n                    />\r\n                </FormControl>\r\n                <FormControl fullWidth className={classes.margin}>\r\n                    <InputLabel htmlFor=\"userEmail\">Email</InputLabel>\r\n                    <Input\r\n                        type=\"email\"\r\n                        id=\"userEmail\"\r\n                        value={values.email}\r\n                        onChange={e => setValues({ ...values, email: e.target.value })}\r\n                    />\r\n                </FormControl>\r\n                <FormControl fullWidth className={classes.margin}>\r\n                    <TextField\r\n                        fullWidth\r\n                        id=\"userBio\"\r\n                        rows={3}\r\n                        label=\"Write something about you\"\r\n                        value={values.bio}\r\n                        multiline\r\n                        maxLength=\"200\"\r\n                        onChange={e => setValues({ ...values, bio: e.target.value })}\r\n                    />\r\n                </FormControl>\r\n                <FormControl fullWidth className={classes.margin}>\r\n                    <InputLabel htmlFor=\"userLocation\">Location</InputLabel>\r\n                    <Input\r\n                        type=\"text\"\r\n                        id=\"userLocation\"\r\n                        value={values.location}\r\n                        onChange={e => setValues({ ...values, location: e.target.value })}\r\n                    />\r\n                </FormControl>\r\n                <FormControl fullWidth className={classes.margin}>\r\n                    <InputLabel htmlFor=\"userWebsite\">Website</InputLabel>\r\n                    <Input\r\n                        type=\"url\"\r\n                        id=\"userWebsite\"\r\n                        value={values.website}\r\n                        onChange={e => setValues({ ...values, website: e.target.value })}\r\n                    />\r\n                </FormControl>\r\n\r\n                <FormControl className={clsx(classes.submit, classes.margin)}>\r\n                    <Button variant=\"contained\" color=\"primary\" type=\"submit\" disabled={disable}>\r\n                        Update Profile\r\n                    </Button>\r\n                    {disable && <CircularProgress size={24} className={classes.progressbar}>\r\n                    </CircularProgress>}\r\n                </FormControl>\r\n            </form>\r\n        </React.Fragment>\r\n    )\r\n}\r\n","import {\r\n    Typography,\r\n    Tabs,\r\n    Tab,\r\n    Divider,\r\n    Box,\r\n    Container,\r\n} from '@material-ui/core'\r\nimport React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ChangePasswordForm from '../components/ChangePasswordForm';\r\nimport EditProfile from '../components/EditProfile';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        [theme.breakpoints.up('sm')]: {\r\n            margin: theme.spacing(2),\r\n        }\r\n    },\r\n    mrBottom: {\r\n        marginBottom: theme.spacing(3),\r\n    },\r\n    mrTop: {\r\n        marginTop: theme.spacing(3),\r\n    }\r\n}));\r\n\r\nexport default function Settings() {\r\n\r\n    const classes = useStyles();\r\n    const [index, setIndex] = React.useState(0);\r\n\r\n    const handleChangeIndex = (event, index) => {\r\n        setIndex(index);\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Box className={classes.root}>\r\n                <Typography variant=\"h4\" className={classes.mrBottom}>Account Settings</Typography>\r\n                <Tabs\r\n                    value={index}\r\n                    onChange={handleChangeIndex}\r\n                    indicatorColor=\"primary\"\r\n                    textColor=\"primary\"\r\n                    style={{ overflow: \"auto\" }}\r\n                >\r\n                    <Tab label=\"Profile\" />\r\n                    <Tab label=\"Password\" />\r\n                    {/*<Tab label=\"Account\" />*/}\r\n                </Tabs>\r\n                <Divider />\r\n\r\n                {(index === 0) && (<Box index={0} className={classes.mrTop} style={{ display: 'flex' }}>\r\n                    <Container maxWidth=\"xs\" disableGutters>\r\n                        <EditProfile />\r\n                    </Container>\r\n                    <div style={{ flexGrow: 1 }}></div>\r\n                </Box>)}\r\n                {(index === 1) && (<Box index={1} style={{ display: 'flex' }}>\r\n                    <Container maxWidth=\"xs\" disableGutters>\r\n                        <ChangePasswordForm />\r\n                    </Container>\r\n                    <div style={{ flexGrow: 1 }}></div>\r\n                </Box>)}\r\n                {/* {(index === 2) && (<Box index={2} className={classes.mrTop}>\r\n                    Account Settings will come soon...\r\n               </Box>)}*/}\r\n            </Box>\r\n        </React.Fragment>\r\n    )\r\n\r\n}\r\n\r\n"],"sourceRoot":""}